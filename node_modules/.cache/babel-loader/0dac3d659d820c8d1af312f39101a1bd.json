{"ast":null,"code":"import { describe, PropTypes } from 'react-desc';\nexport var doc = function doc(Tab) {\n  var DocumentedTab = describe(Tab).description('One tab within Tabs.').usage(\"import { Tab } from 'grommet';\\n<Tab />\").intrinsicElement('button');\n  DocumentedTab.propTypes = {\n    disabled: PropTypes.bool.description('Whether the tab is disabled.').defaultValue(false),\n    icon: PropTypes.element.description('Icon element to place in the tab.'),\n    plain: PropTypes.bool.description('Whether this is a plain tab with no style.').defaultValue(false),\n    reverse: PropTypes.bool.description(\"Whether an icon and label should be reversed so that the icon is at the\\n              end of the tab.\").defaultValue(false),\n    title: PropTypes.node.description('The title of the tab.')\n  };\n  return DocumentedTab;\n};\nexport var themeDoc = {\n  'tab.active': {\n    description: 'styles for the active tab.',\n    type: 'object',\n    defaultValue: \"{color: 'text', background: undefined }\"\n  },\n  'tab.background': {\n    description: 'background styling of Tab.',\n    type: 'object',\n    defaultValue: undefined\n  },\n  'tab.border': {\n    description: 'border styles of the tab',\n    type: 'object',\n    defaultValue: \"{\\n      side: 'bottom',\\n      size: 'small',\\n      color: {\\n        dark: 'accent-1',\\n        light: 'brand',\\n      },\\n      active: {\\n        color: {\\n          dark: 'white',\\n          light: 'black',\\n        },\\n      },\\n      hover: {\\n        color: {\\n          dark: 'white',\\n          light: 'black',\\n        },\\n        // extend: undefined,\\n      },\\n    }\"\n  },\n  'tab.border.disabled.color': {\n    description: 'border color of the Tab when disabled',\n    type: 'string | {dark: string, light: string}',\n    defaultValue: undefined\n  },\n  'tab.color': {\n    description: 'text color for the Tab.',\n    type: 'string | {dark: string, light: string}',\n    defaultValue: 'control'\n  },\n  'tab.disabled.color': {\n    description: 'text color of the Tab when disabled.',\n    type: 'string | {dark: string, light: string}',\n    defaultValue: undefined\n  },\n  'tab.extend': {\n    description: 'Any additional style for Tab.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  },\n  'tab.hover.background': {\n    description: 'background style of the Tab on hover.',\n    type: 'string | object',\n    defaultValue: undefined\n  },\n  'tab.hover.color': {\n    description: 'text color of the tab on hover.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: \"{ dark: 'white', light: 'black' }\"\n  },\n  'tab.hover.extend': {\n    description: 'Any additional style for Tab hover.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  },\n  'tab.margin': {\n    description: 'The margin of Tab.',\n    type: 'string | object',\n    defaultValue: \"{ vertical: 'xxsmall', horizontal: 'small' }\"\n  },\n  'tab.pad': {\n    description: 'The pad of Tab.',\n    type: 'string | object',\n    defaultValue: \"{ bottom: 'xsmall' }\"\n  }\n};","map":{"version":3,"sources":["C:/Users/antaresofficial/Desktop/tree/node_modules/grommet/es6/components/Tab/doc.js"],"names":["describe","PropTypes","doc","Tab","DocumentedTab","description","usage","intrinsicElement","propTypes","disabled","bool","defaultValue","icon","element","plain","reverse","title","node","themeDoc","type","undefined"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,YAApC;AACA,OAAO,IAAIC,GAAG,GAAG,SAASA,GAAT,CAAaC,GAAb,EAAkB;AACjC,MAAIC,aAAa,GAAGJ,QAAQ,CAACG,GAAD,CAAR,CAAcE,WAAd,CAA0B,sBAA1B,EAAkDC,KAAlD,CAAwD,yCAAxD,EAAmGC,gBAAnG,CAAoH,QAApH,CAApB;AACAH,EAAAA,aAAa,CAACI,SAAd,GAA0B;AACxBC,IAAAA,QAAQ,EAAER,SAAS,CAACS,IAAV,CAAeL,WAAf,CAA2B,8BAA3B,EAA2DM,YAA3D,CAAwE,KAAxE,CADc;AAExBC,IAAAA,IAAI,EAAEX,SAAS,CAACY,OAAV,CAAkBR,WAAlB,CAA8B,mCAA9B,CAFkB;AAGxBS,IAAAA,KAAK,EAAEb,SAAS,CAACS,IAAV,CAAeL,WAAf,CAA2B,4CAA3B,EAAyEM,YAAzE,CAAsF,KAAtF,CAHiB;AAIxBI,IAAAA,OAAO,EAAEd,SAAS,CAACS,IAAV,CAAeL,WAAf,CAA2B,wGAA3B,EAAqIM,YAArI,CAAkJ,KAAlJ,CAJe;AAKxBK,IAAAA,KAAK,EAAEf,SAAS,CAACgB,IAAV,CAAeZ,WAAf,CAA2B,uBAA3B;AALiB,GAA1B;AAOA,SAAOD,aAAP;AACD,CAVM;AAWP,OAAO,IAAIc,QAAQ,GAAG;AACpB,gBAAc;AACZb,IAAAA,WAAW,EAAE,4BADD;AAEZc,IAAAA,IAAI,EAAE,QAFM;AAGZR,IAAAA,YAAY,EAAE;AAHF,GADM;AAMpB,oBAAkB;AAChBN,IAAAA,WAAW,EAAE,4BADG;AAEhBc,IAAAA,IAAI,EAAE,QAFU;AAGhBR,IAAAA,YAAY,EAAES;AAHE,GANE;AAWpB,gBAAc;AACZf,IAAAA,WAAW,EAAE,0BADD;AAEZc,IAAAA,IAAI,EAAE,QAFM;AAGZR,IAAAA,YAAY,EAAE;AAHF,GAXM;AAgBpB,+BAA6B;AAC3BN,IAAAA,WAAW,EAAE,uCADc;AAE3Bc,IAAAA,IAAI,EAAE,wCAFqB;AAG3BR,IAAAA,YAAY,EAAES;AAHa,GAhBT;AAqBpB,eAAa;AACXf,IAAAA,WAAW,EAAE,yBADF;AAEXc,IAAAA,IAAI,EAAE,wCAFK;AAGXR,IAAAA,YAAY,EAAE;AAHH,GArBO;AA0BpB,wBAAsB;AACpBN,IAAAA,WAAW,EAAE,sCADO;AAEpBc,IAAAA,IAAI,EAAE,wCAFc;AAGpBR,IAAAA,YAAY,EAAES;AAHM,GA1BF;AA+BpB,gBAAc;AACZf,IAAAA,WAAW,EAAE,+BADD;AAEZc,IAAAA,IAAI,EAAE,wBAFM;AAGZR,IAAAA,YAAY,EAAES;AAHF,GA/BM;AAoCpB,0BAAwB;AACtBf,IAAAA,WAAW,EAAE,uCADS;AAEtBc,IAAAA,IAAI,EAAE,iBAFgB;AAGtBR,IAAAA,YAAY,EAAES;AAHQ,GApCJ;AAyCpB,qBAAmB;AACjBf,IAAAA,WAAW,EAAE,iCADI;AAEjBc,IAAAA,IAAI,EAAE,0CAFW;AAGjBR,IAAAA,YAAY,EAAE;AAHG,GAzCC;AA8CpB,sBAAoB;AAClBN,IAAAA,WAAW,EAAE,qCADK;AAElBc,IAAAA,IAAI,EAAE,wBAFY;AAGlBR,IAAAA,YAAY,EAAES;AAHI,GA9CA;AAmDpB,gBAAc;AACZf,IAAAA,WAAW,EAAE,oBADD;AAEZc,IAAAA,IAAI,EAAE,iBAFM;AAGZR,IAAAA,YAAY,EAAE;AAHF,GAnDM;AAwDpB,aAAW;AACTN,IAAAA,WAAW,EAAE,iBADJ;AAETc,IAAAA,IAAI,EAAE,iBAFG;AAGTR,IAAAA,YAAY,EAAE;AAHL;AAxDS,CAAf","sourcesContent":["import { describe, PropTypes } from 'react-desc';\nexport var doc = function doc(Tab) {\n  var DocumentedTab = describe(Tab).description('One tab within Tabs.').usage(\"import { Tab } from 'grommet';\\n<Tab />\").intrinsicElement('button');\n  DocumentedTab.propTypes = {\n    disabled: PropTypes.bool.description('Whether the tab is disabled.').defaultValue(false),\n    icon: PropTypes.element.description('Icon element to place in the tab.'),\n    plain: PropTypes.bool.description('Whether this is a plain tab with no style.').defaultValue(false),\n    reverse: PropTypes.bool.description(\"Whether an icon and label should be reversed so that the icon is at the\\n              end of the tab.\").defaultValue(false),\n    title: PropTypes.node.description('The title of the tab.')\n  };\n  return DocumentedTab;\n};\nexport var themeDoc = {\n  'tab.active': {\n    description: 'styles for the active tab.',\n    type: 'object',\n    defaultValue: \"{color: 'text', background: undefined }\"\n  },\n  'tab.background': {\n    description: 'background styling of Tab.',\n    type: 'object',\n    defaultValue: undefined\n  },\n  'tab.border': {\n    description: 'border styles of the tab',\n    type: 'object',\n    defaultValue: \"{\\n      side: 'bottom',\\n      size: 'small',\\n      color: {\\n        dark: 'accent-1',\\n        light: 'brand',\\n      },\\n      active: {\\n        color: {\\n          dark: 'white',\\n          light: 'black',\\n        },\\n      },\\n      hover: {\\n        color: {\\n          dark: 'white',\\n          light: 'black',\\n        },\\n        // extend: undefined,\\n      },\\n    }\"\n  },\n  'tab.border.disabled.color': {\n    description: 'border color of the Tab when disabled',\n    type: 'string | {dark: string, light: string}',\n    defaultValue: undefined\n  },\n  'tab.color': {\n    description: 'text color for the Tab.',\n    type: 'string | {dark: string, light: string}',\n    defaultValue: 'control'\n  },\n  'tab.disabled.color': {\n    description: 'text color of the Tab when disabled.',\n    type: 'string | {dark: string, light: string}',\n    defaultValue: undefined\n  },\n  'tab.extend': {\n    description: 'Any additional style for Tab.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  },\n  'tab.hover.background': {\n    description: 'background style of the Tab on hover.',\n    type: 'string | object',\n    defaultValue: undefined\n  },\n  'tab.hover.color': {\n    description: 'text color of the tab on hover.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: \"{ dark: 'white', light: 'black' }\"\n  },\n  'tab.hover.extend': {\n    description: 'Any additional style for Tab hover.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  },\n  'tab.margin': {\n    description: 'The margin of Tab.',\n    type: 'string | object',\n    defaultValue: \"{ vertical: 'xxsmall', horizontal: 'small' }\"\n  },\n  'tab.pad': {\n    description: 'The pad of Tab.',\n    type: 'string | object',\n    defaultValue: \"{ bottom: 'xsmall' }\"\n  }\n};"]},"metadata":{},"sourceType":"module"}