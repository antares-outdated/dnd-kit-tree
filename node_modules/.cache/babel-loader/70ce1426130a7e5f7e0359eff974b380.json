{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef, useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { defaultProps } from '../../default-props';\nimport { arcCommands, parseMetricToNum, translateEndAngle } from '../../utils';\nimport { StyledMeter } from './StyledMeter';\nimport { strokeProps, defaultColor } from './utils';\nvar Circle = /*#__PURE__*/forwardRef(function (props, ref) {\n  var background = props.background,\n      max = props.max,\n      round = props.round,\n      size = props.size,\n      thickness = props.thickness,\n      values = props.values,\n      rest = _objectWithoutPropertiesLoose(props, [\"background\", \"max\", \"round\", \"size\", \"thickness\", \"values\"]);\n\n  var theme = useContext(ThemeContext);\n  var width = size === 'full' ? 288 : parseMetricToNum(theme.global.size[size] || size);\n  var height = parseMetricToNum(theme.global.edgeSize[thickness] || thickness);\n  var mid = width / 2;\n  var radius = width / 2 - height / 2;\n  var anglePer = 360 / max;\n  var someHighlight = (values || []).some(function (v) {\n    return v.highlight;\n  });\n  var startValue = 0;\n  var startAngle = 0;\n  var paths = [];\n  var pathCaps = [];\n  (values || []).filter(function (v) {\n    return v.value > 0;\n  }).forEach(function (valueArg, index) {\n    var color = valueArg.color,\n        highlight = valueArg.highlight,\n        label = valueArg.label,\n        onHover = valueArg.onHover,\n        value = valueArg.value,\n        pathRest = _objectWithoutPropertiesLoose(valueArg, [\"color\", \"highlight\", \"label\", \"onHover\", \"value\"]);\n\n    var key = \"p-\" + index;\n    var colorName = color || defaultColor(index, theme, values ? values.length : 0);\n    var endAngle;\n\n    if (startValue + value >= max) {\n      endAngle = 360;\n    } else {\n      endAngle = Math.min(360, translateEndAngle(startAngle, anglePer, value));\n    }\n\n    var hoverProps;\n\n    if (onHover) {\n      hoverProps = {\n        onMouseOver: function onMouseOver() {\n          return onHover(true);\n        },\n        onMouseLeave: function onMouseLeave() {\n          return onHover(false);\n        }\n      };\n    }\n\n    var stroke = strokeProps(someHighlight && !highlight ? background : colorName, theme);\n\n    if (round) {\n      var d1 = arcCommands(width / 2, width / 2, radius, startAngle, endAngle);\n      paths.unshift( /*#__PURE__*/React.createElement(\"path\", _extends({\n        key: key,\n        d: d1,\n        fill: \"none\"\n      }, stroke, {\n        strokeWidth: height,\n        strokeLinecap: \"round\"\n      }, hoverProps, pathRest))); // To handle situations where the last values are small, redraw\n      // a dot at the end. Give just a bit of angle to avoid anti-aliasing\n      // leakage around the edge.\n\n      var d2 = arcCommands(width / 2, width / 2, radius, endAngle - 0.5, endAngle);\n      var pathCap = /*#__PURE__*/React.createElement(\"path\", _extends({\n        key: key + \"-\",\n        d: d2,\n        fill: \"none\"\n      }, stroke, {\n        strokeWidth: height,\n        strokeLinecap: \"round\"\n      }, hoverProps, pathRest)); // If we are on a large enough path to not need re-drawing previous\n      // ones, clear the pathCaps we've collected already.\n\n      if (endAngle - startAngle > 2 * anglePer) {\n        pathCaps = [];\n      }\n\n      pathCaps.unshift(pathCap);\n    } else {\n      var d = arcCommands(width / 2, width / 2, radius, startAngle, endAngle);\n      paths.push( /*#__PURE__*/React.createElement(\"path\", _extends({\n        key: key,\n        d: d,\n        fill: \"none\"\n      }, stroke, {\n        strokeWidth: height,\n        strokeLinecap: \"butt\"\n      }, hoverProps, pathRest)));\n    }\n\n    startValue += value;\n    startAngle = endAngle;\n  });\n  return /*#__PURE__*/React.createElement(StyledMeter, _extends({\n    ref: ref,\n    viewBox: \"0 0 \" + width + \" \" + width,\n    width: size === 'full' ? '100%' : width,\n    height: size === 'full' ? '100%' : width\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", _extends({\n    cx: mid,\n    cy: mid,\n    r: radius\n  }, strokeProps(background, theme), {\n    strokeWidth: height,\n    strokeLinecap: round ? 'round' : 'square',\n    fill: \"none\"\n  })), paths, pathCaps);\n});\nCircle.displayName = 'Circle';\nCircle.defaultProps = {};\nObject.setPrototypeOf(Circle.defaultProps, defaultProps);\nexport { Circle };","map":{"version":3,"sources":["C:/Users/antaresofficial/Desktop/tree/node_modules/grommet/es6/components/Meter/Circle.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","forwardRef","useContext","ThemeContext","defaultProps","arcCommands","parseMetricToNum","translateEndAngle","StyledMeter","strokeProps","defaultColor","Circle","props","ref","background","max","round","size","thickness","values","rest","theme","width","global","height","edgeSize","mid","radius","anglePer","someHighlight","some","v","highlight","startValue","startAngle","paths","pathCaps","filter","value","forEach","valueArg","index","color","label","onHover","pathRest","colorName","endAngle","Math","min","hoverProps","onMouseOver","onMouseLeave","stroke","d1","unshift","createElement","d","fill","strokeWidth","strokeLinecap","d2","pathCap","push","viewBox","cx","cy","r","displayName","setPrototypeOf"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef, useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { defaultProps } from '../../default-props';\nimport { arcCommands, parseMetricToNum, translateEndAngle } from '../../utils';\nimport { StyledMeter } from './StyledMeter';\nimport { strokeProps, defaultColor } from './utils';\nvar Circle = /*#__PURE__*/forwardRef(function (props, ref) {\n  var background = props.background,\n      max = props.max,\n      round = props.round,\n      size = props.size,\n      thickness = props.thickness,\n      values = props.values,\n      rest = _objectWithoutPropertiesLoose(props, [\"background\", \"max\", \"round\", \"size\", \"thickness\", \"values\"]);\n\n  var theme = useContext(ThemeContext);\n  var width = size === 'full' ? 288 : parseMetricToNum(theme.global.size[size] || size);\n  var height = parseMetricToNum(theme.global.edgeSize[thickness] || thickness);\n  var mid = width / 2;\n  var radius = width / 2 - height / 2;\n  var anglePer = 360 / max;\n  var someHighlight = (values || []).some(function (v) {\n    return v.highlight;\n  });\n  var startValue = 0;\n  var startAngle = 0;\n  var paths = [];\n  var pathCaps = [];\n  (values || []).filter(function (v) {\n    return v.value > 0;\n  }).forEach(function (valueArg, index) {\n    var color = valueArg.color,\n        highlight = valueArg.highlight,\n        label = valueArg.label,\n        onHover = valueArg.onHover,\n        value = valueArg.value,\n        pathRest = _objectWithoutPropertiesLoose(valueArg, [\"color\", \"highlight\", \"label\", \"onHover\", \"value\"]);\n\n    var key = \"p-\" + index;\n    var colorName = color || defaultColor(index, theme, values ? values.length : 0);\n    var endAngle;\n\n    if (startValue + value >= max) {\n      endAngle = 360;\n    } else {\n      endAngle = Math.min(360, translateEndAngle(startAngle, anglePer, value));\n    }\n\n    var hoverProps;\n\n    if (onHover) {\n      hoverProps = {\n        onMouseOver: function onMouseOver() {\n          return onHover(true);\n        },\n        onMouseLeave: function onMouseLeave() {\n          return onHover(false);\n        }\n      };\n    }\n\n    var stroke = strokeProps(someHighlight && !highlight ? background : colorName, theme);\n\n    if (round) {\n      var d1 = arcCommands(width / 2, width / 2, radius, startAngle, endAngle);\n      paths.unshift( /*#__PURE__*/React.createElement(\"path\", _extends({\n        key: key,\n        d: d1,\n        fill: \"none\"\n      }, stroke, {\n        strokeWidth: height,\n        strokeLinecap: \"round\"\n      }, hoverProps, pathRest))); // To handle situations where the last values are small, redraw\n      // a dot at the end. Give just a bit of angle to avoid anti-aliasing\n      // leakage around the edge.\n\n      var d2 = arcCommands(width / 2, width / 2, radius, endAngle - 0.5, endAngle);\n      var pathCap = /*#__PURE__*/React.createElement(\"path\", _extends({\n        key: key + \"-\",\n        d: d2,\n        fill: \"none\"\n      }, stroke, {\n        strokeWidth: height,\n        strokeLinecap: \"round\"\n      }, hoverProps, pathRest)); // If we are on a large enough path to not need re-drawing previous\n      // ones, clear the pathCaps we've collected already.\n\n      if (endAngle - startAngle > 2 * anglePer) {\n        pathCaps = [];\n      }\n\n      pathCaps.unshift(pathCap);\n    } else {\n      var d = arcCommands(width / 2, width / 2, radius, startAngle, endAngle);\n      paths.push( /*#__PURE__*/React.createElement(\"path\", _extends({\n        key: key,\n        d: d,\n        fill: \"none\"\n      }, stroke, {\n        strokeWidth: height,\n        strokeLinecap: \"butt\"\n      }, hoverProps, pathRest)));\n    }\n\n    startValue += value;\n    startAngle = endAngle;\n  });\n  return /*#__PURE__*/React.createElement(StyledMeter, _extends({\n    ref: ref,\n    viewBox: \"0 0 \" + width + \" \" + width,\n    width: size === 'full' ? '100%' : width,\n    height: size === 'full' ? '100%' : width\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", _extends({\n    cx: mid,\n    cy: mid,\n    r: radius\n  }, strokeProps(background, theme), {\n    strokeWidth: height,\n    strokeLinecap: round ? 'round' : 'square',\n    fill: \"none\"\n  })), paths, pathCaps);\n});\nCircle.displayName = 'Circle';\nCircle.defaultProps = {};\nObject.setPrototypeOf(Circle.defaultProps, defaultProps);\nexport { Circle };"]},"metadata":{},"sourceType":"module"}