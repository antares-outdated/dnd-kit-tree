{"ast":null,"code":"import React, { useContext, useEffect, useRef } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { FormSearch } from 'grommet-icons/icons/FormSearch';\nimport { defaultProps } from '../../default-props';\nimport { Box } from '../Box';\nimport { Button } from '../Button';\nimport { Keyboard } from '../Keyboard';\nimport { Text } from '../Text';\nimport { TextInput } from '../TextInput';\nimport { normalizeColor } from '../../utils';\n\nvar Searcher = function Searcher(_ref) {\n  var filtering = _ref.filtering,\n      filters = _ref.filters,\n      onFilter = _ref.onFilter,\n      onFiltering = _ref.onFiltering,\n      property = _ref.property;\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n  var inputRef = useRef();\n  var needsFocus = filtering === property;\n  useEffect(function () {\n    if (inputRef && needsFocus) {\n      inputRef.current.focus();\n    }\n  }, [needsFocus, inputRef]);\n  return filtering === property ? /*#__PURE__*/React.createElement(Keyboard, {\n    onEsc: function onEsc() {\n      return onFiltering(undefined);\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    width: {\n      min: 'xsmall'\n    },\n    flex: true,\n    pad: {\n      horizontal: 'small'\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    name: \"search-\" + property,\n    a11yTitle: \"Search by \" + property,\n    ref: inputRef,\n    value: filters[property],\n    onChange: function onChange(event) {\n      return onFilter(property, event.target.value);\n    },\n    onBlur: function onBlur() {\n      return onFiltering(undefined);\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, filters[property] ? /*#__PURE__*/React.createElement(Box, {\n    flex: false,\n    pad: {\n      horizontal: 'small'\n    },\n    direction: \"row\",\n    align: \"center\"\n  }, /*#__PURE__*/React.createElement(Text, null, filters[property])) : null, /*#__PURE__*/React.createElement(Button, {\n    a11yTitle: \"Open search by \" + property,\n    icon: /*#__PURE__*/React.createElement(FormSearch, {\n      color: normalizeColor(filtering === property ? 'brand' : 'border', theme)\n    }),\n    hoverIndicator: true,\n    onClick: function onClick() {\n      return onFiltering(filtering === property ? undefined : property);\n    }\n  }));\n};\n\nSearcher.displayName = 'Searcher';\nSearcher.defaultProps = {};\nObject.setPrototypeOf(Searcher.defaultProps, defaultProps);\nexport { Searcher };","map":{"version":3,"sources":["C:/Users/antaresofficial/Desktop/tree/node_modules/grommet/es6/components/DataTable/Searcher.js"],"names":["React","useContext","useEffect","useRef","ThemeContext","FormSearch","defaultProps","Box","Button","Keyboard","Text","TextInput","normalizeColor","Searcher","_ref","filtering","filters","onFilter","onFiltering","property","theme","inputRef","needsFocus","current","focus","createElement","onEsc","undefined","width","min","flex","pad","horizontal","name","a11yTitle","ref","value","onChange","event","target","onBlur","Fragment","direction","align","icon","color","hoverIndicator","onClick","displayName","Object","setPrototypeOf"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { FormSearch } from 'grommet-icons/icons/FormSearch';\nimport { defaultProps } from '../../default-props';\nimport { Box } from '../Box';\nimport { Button } from '../Button';\nimport { Keyboard } from '../Keyboard';\nimport { Text } from '../Text';\nimport { TextInput } from '../TextInput';\nimport { normalizeColor } from '../../utils';\n\nvar Searcher = function Searcher(_ref) {\n  var filtering = _ref.filtering,\n      filters = _ref.filters,\n      onFilter = _ref.onFilter,\n      onFiltering = _ref.onFiltering,\n      property = _ref.property;\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n  var inputRef = useRef();\n  var needsFocus = filtering === property;\n  useEffect(function () {\n    if (inputRef && needsFocus) {\n      inputRef.current.focus();\n    }\n  }, [needsFocus, inputRef]);\n  return filtering === property ? /*#__PURE__*/React.createElement(Keyboard, {\n    onEsc: function onEsc() {\n      return onFiltering(undefined);\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    width: {\n      min: 'xsmall'\n    },\n    flex: true,\n    pad: {\n      horizontal: 'small'\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    name: \"search-\" + property,\n    a11yTitle: \"Search by \" + property,\n    ref: inputRef,\n    value: filters[property],\n    onChange: function onChange(event) {\n      return onFilter(property, event.target.value);\n    },\n    onBlur: function onBlur() {\n      return onFiltering(undefined);\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, filters[property] ? /*#__PURE__*/React.createElement(Box, {\n    flex: false,\n    pad: {\n      horizontal: 'small'\n    },\n    direction: \"row\",\n    align: \"center\"\n  }, /*#__PURE__*/React.createElement(Text, null, filters[property])) : null, /*#__PURE__*/React.createElement(Button, {\n    a11yTitle: \"Open search by \" + property,\n    icon: /*#__PURE__*/React.createElement(FormSearch, {\n      color: normalizeColor(filtering === property ? 'brand' : 'border', theme)\n    }),\n    hoverIndicator: true,\n    onClick: function onClick() {\n      return onFiltering(filtering === property ? undefined : property);\n    }\n  }));\n};\n\nSearcher.displayName = 'Searcher';\nSearcher.defaultProps = {};\nObject.setPrototypeOf(Searcher.defaultProps, defaultProps);\nexport { Searcher };"]},"metadata":{},"sourceType":"module"}