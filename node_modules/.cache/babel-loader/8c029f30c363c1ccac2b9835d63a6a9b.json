{"ast":null,"code":"import { describe, PropTypes } from 'react-desc';\nimport { getAvailableAtBadge } from '../../utils/mixins';\nexport var doc = function doc(RadioButtonGroup) {\n  var DocumentedRadioButtonGroup = describe(RadioButtonGroup).availableAt(getAvailableAtBadge('RadioButtonGroup', 'Input')).description('A group of radio buttons.').usage(\"import { RadioButtonGroup } from 'grommet';\\n<RadioButtonGroup />\").intrinsicElement('div');\n  DocumentedRadioButtonGroup.propTypes = {\n    children: PropTypes.func.description(\"Function that will be called to render the visual representation.\\n      It will be passed an object indicating whether the button is checked. It\\n      should return a react element.\\n      For example:\\n      `children={(option, { checked }) => <Box ...>{...}</Box>}`\\n      \"),\n    disabled: PropTypes.bool.description(\"Disables all options.\").defaultValue(false),\n    name: PropTypes.string.description(\"The DOM name attribute value to use for the underlying <input/> \\n      elements.\").isRequired,\n    onChange: PropTypes.func.description(\"Function that will be called when the user clicks on one of the radio\\n      buttons. It will be passed a React event object.\"),\n    options: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.arrayOf(PropTypes.number), PropTypes.arrayOf(PropTypes.bool), PropTypes.arrayOf(PropTypes.shape({\n      disabled: PropTypes.bool,\n      id: PropTypes.string,\n      label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]).isRequired\n    }))]).description(\"Options can be either a string, boolean, number \\n      or an object. Each option is rendered as a single RadioButton.\").isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool, PropTypes.object]).description(\"Currently selected option value.\")\n  };\n  return DocumentedRadioButtonGroup;\n};\nexport var themeDoc = {\n  'radioButtonGroup.container': {\n    description: 'Any valid Box props for the RadioButtonGroup container.',\n    type: 'object',\n    defaultValue: 'undefined'\n  }\n};","map":{"version":3,"sources":["C:/Users/antaresofficial/Desktop/tree/node_modules/grommet/es6/components/RadioButtonGroup/doc.js"],"names":["describe","PropTypes","getAvailableAtBadge","doc","RadioButtonGroup","DocumentedRadioButtonGroup","availableAt","description","usage","intrinsicElement","propTypes","children","func","disabled","bool","defaultValue","name","string","isRequired","onChange","options","oneOfType","arrayOf","number","shape","id","label","element","value","object","themeDoc","type"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,YAApC;AACA,SAASC,mBAAT,QAAoC,oBAApC;AACA,OAAO,IAAIC,GAAG,GAAG,SAASA,GAAT,CAAaC,gBAAb,EAA+B;AAC9C,MAAIC,0BAA0B,GAAGL,QAAQ,CAACI,gBAAD,CAAR,CAA2BE,WAA3B,CAAuCJ,mBAAmB,CAAC,kBAAD,EAAqB,OAArB,CAA1D,EAAyFK,WAAzF,CAAqG,2BAArG,EAAkIC,KAAlI,CAAwI,mEAAxI,EAA6MC,gBAA7M,CAA8N,KAA9N,CAAjC;AACAJ,EAAAA,0BAA0B,CAACK,SAA3B,GAAuC;AACrCC,IAAAA,QAAQ,EAAEV,SAAS,CAACW,IAAV,CAAeL,WAAf,CAA2B,uRAA3B,CAD2B;AAErCM,IAAAA,QAAQ,EAAEZ,SAAS,CAACa,IAAV,CAAeP,WAAf,CAA2B,uBAA3B,EAAoDQ,YAApD,CAAiE,KAAjE,CAF2B;AAGrCC,IAAAA,IAAI,EAAEf,SAAS,CAACgB,MAAV,CAAiBV,WAAjB,CAA6B,mFAA7B,EAAkHW,UAHnF;AAIrCC,IAAAA,QAAQ,EAAElB,SAAS,CAACW,IAAV,CAAeL,WAAf,CAA2B,+HAA3B,CAJ2B;AAKrCa,IAAAA,OAAO,EAAEnB,SAAS,CAACoB,SAAV,CAAoB,CAACpB,SAAS,CAACqB,OAAV,CAAkBrB,SAAS,CAACgB,MAA5B,CAAD,EAAsChB,SAAS,CAACqB,OAAV,CAAkBrB,SAAS,CAACsB,MAA5B,CAAtC,EAA2EtB,SAAS,CAACqB,OAAV,CAAkBrB,SAAS,CAACa,IAA5B,CAA3E,EAA8Gb,SAAS,CAACqB,OAAV,CAAkBrB,SAAS,CAACuB,KAAV,CAAgB;AAC3KX,MAAAA,QAAQ,EAAEZ,SAAS,CAACa,IADuJ;AAE3KW,MAAAA,EAAE,EAAExB,SAAS,CAACgB,MAF6J;AAG3KS,MAAAA,KAAK,EAAEzB,SAAS,CAACoB,SAAV,CAAoB,CAACpB,SAAS,CAACgB,MAAX,EAAmBhB,SAAS,CAAC0B,OAA7B,CAApB,CAHoK;AAI3KC,MAAAA,KAAK,EAAE3B,SAAS,CAACoB,SAAV,CAAoB,CAACpB,SAAS,CAACgB,MAAX,EAAmBhB,SAAS,CAACsB,MAA7B,EAAqCtB,SAAS,CAACa,IAA/C,CAApB,EAA0EI;AAJ0F,KAAhB,CAAlB,CAA9G,CAApB,EAKHX,WALG,CAKS,wHALT,EAKmIW,UAVvG;AAWrCU,IAAAA,KAAK,EAAE3B,SAAS,CAACoB,SAAV,CAAoB,CAACpB,SAAS,CAACgB,MAAX,EAAmBhB,SAAS,CAACsB,MAA7B,EAAqCtB,SAAS,CAACa,IAA/C,EAAqDb,SAAS,CAAC4B,MAA/D,CAApB,EAA4FtB,WAA5F,CAAwG,kCAAxG;AAX8B,GAAvC;AAaA,SAAOF,0BAAP;AACD,CAhBM;AAiBP,OAAO,IAAIyB,QAAQ,GAAG;AACpB,gCAA8B;AAC5BvB,IAAAA,WAAW,EAAE,yDADe;AAE5BwB,IAAAA,IAAI,EAAE,QAFsB;AAG5BhB,IAAAA,YAAY,EAAE;AAHc;AADV,CAAf","sourcesContent":["import { describe, PropTypes } from 'react-desc';\nimport { getAvailableAtBadge } from '../../utils/mixins';\nexport var doc = function doc(RadioButtonGroup) {\n  var DocumentedRadioButtonGroup = describe(RadioButtonGroup).availableAt(getAvailableAtBadge('RadioButtonGroup', 'Input')).description('A group of radio buttons.').usage(\"import { RadioButtonGroup } from 'grommet';\\n<RadioButtonGroup />\").intrinsicElement('div');\n  DocumentedRadioButtonGroup.propTypes = {\n    children: PropTypes.func.description(\"Function that will be called to render the visual representation.\\n      It will be passed an object indicating whether the button is checked. It\\n      should return a react element.\\n      For example:\\n      `children={(option, { checked }) => <Box ...>{...}</Box>}`\\n      \"),\n    disabled: PropTypes.bool.description(\"Disables all options.\").defaultValue(false),\n    name: PropTypes.string.description(\"The DOM name attribute value to use for the underlying <input/> \\n      elements.\").isRequired,\n    onChange: PropTypes.func.description(\"Function that will be called when the user clicks on one of the radio\\n      buttons. It will be passed a React event object.\"),\n    options: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.arrayOf(PropTypes.number), PropTypes.arrayOf(PropTypes.bool), PropTypes.arrayOf(PropTypes.shape({\n      disabled: PropTypes.bool,\n      id: PropTypes.string,\n      label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]).isRequired\n    }))]).description(\"Options can be either a string, boolean, number \\n      or an object. Each option is rendered as a single RadioButton.\").isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool, PropTypes.object]).description(\"Currently selected option value.\")\n  };\n  return DocumentedRadioButtonGroup;\n};\nexport var themeDoc = {\n  'radioButtonGroup.container': {\n    description: 'Any valid Box props for the RadioButtonGroup container.',\n    type: 'object',\n    defaultValue: 'undefined'\n  }\n};"]},"metadata":{},"sourceType":"module"}