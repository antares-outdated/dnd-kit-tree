{"ast":null,"code":"import _slicedToArray from \"C:/Users/antaresofficial/Desktop/tree/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useCallback } from 'react';\nvar hiddenStyles = {\n  display: 'none'\n};\n\nfunction HiddenText(_ref) {\n  var id = _ref.id,\n      value = _ref.value;\n  return React.createElement(\"div\", {\n    id: id,\n    style: hiddenStyles\n  }, value);\n}\n\nvar visuallyHidden = {\n  position: 'absolute',\n  width: 1,\n  height: 1,\n  margin: -1,\n  border: 0,\n  padding: 0,\n  overflow: 'hidden',\n  clip: 'rect(0 0 0 0)',\n  clipPath: 'inset(100%)',\n  whiteSpace: 'nowrap'\n};\n\nfunction LiveRegion(_ref2) {\n  var id = _ref2.id,\n      announcement = _ref2.announcement;\n  return React.createElement(\"div\", {\n    id: id,\n    style: visuallyHidden,\n    role: \"status\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": true\n  }, announcement);\n}\n\nfunction useAnnouncement() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      announcement = _useState2[0],\n      setAnnouncement = _useState2[1];\n\n  var announce = useCallback(function (value) {\n    if (value != null) {\n      setAnnouncement(value);\n    }\n  }, []);\n  return {\n    announce: announce,\n    announcement: announcement\n  };\n}\n\nexport { HiddenText, LiveRegion, useAnnouncement };","map":{"version":3,"sources":["../src/components/HiddenText/HiddenText.tsx","../src/components/LiveRegion/LiveRegion.tsx","../src/hooks/useAnnouncement.ts"],"names":["hiddenStyles","display","HiddenText","value","id","style","visuallyHidden","position","width","height","margin","border","padding","overflow","clip","clipPath","whiteSpace","LiveRegion","announcement","role","useAnnouncement","useState","announce","useCallback","setAnnouncement"],"mappings":";;AAOA,IAAMA,YAAY,GAAwB;AACxCC,EAAAA,OAAO,EAAE;AAD+B,CAA1C;;SAIgBC,U,OAAW;AAAA,MAAA,EAAA,QAAA,EAAA;AAAA,MAAKC,KAAL,QAAKA,KAAL;AACzB,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAKC,IAAAA,EAAE,EAAEA,EAAT;AAAaC,IAAAA,KAAK,EAAEL;AAApB,GAAA,EADF,KACE,CADF;AAKD;;ACTD,IAAMM,cAAc,GAAwB;AAC1CC,EAAAA,QAAQ,EADkC,UAAA;AAE1CC,EAAAA,KAAK,EAFqC,CAAA;AAG1CC,EAAAA,MAAM,EAHoC,CAAA;AAI1CC,EAAAA,MAAM,EAAE,CAJkC,CAAA;AAK1CC,EAAAA,MAAM,EALoC,CAAA;AAM1CC,EAAAA,OAAO,EANmC,CAAA;AAO1CC,EAAAA,QAAQ,EAPkC,QAAA;AAQ1CC,EAAAA,IAAI,EARsC,eAAA;AAS1CC,EAAAA,QAAQ,EATkC,aAAA;AAU1CC,EAAAA,UAAU,EAAE;AAV8B,CAA5C;;AAaA,SAAgBC,UAAhB,QAA2B;AAAA,MAAA,EAAA,SAAA,EAAA;AAAA,MAAKC,YAAL,SAAKA,YAAL;AACzB,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACEd,IAAAA,EAAE,EAAEA,EADN;AAEEC,IAAAA,KAAK,EAAEC,cAFT;AAGEa,IAAAA,IAAI,EAAC,QAHP;iBAIY,WAJZ;;AAAA,GAAA,EADF,YACE,CADF;AAWD;;SC/BeC,e,GAAAA;AACd,kBAAwCC,QAAQ,CAAhD,EAAgD,CAAhD;AAAA;AAAA,MAAM,YAAN;AAAA,MAAM,eAAN;;AACA,MAAMC,QAAQ,GAAGC,WAAW,CAAEpB,UAAAA,KAAD,EAAA;AAC3B,QAAIA,KAAK,IAAT,IAAA,EAAmB;AACjBqB,MAAAA,eAAe,CAAfA,KAAe,CAAfA;AACD;AAHyB,GAAA,EAA5B,EAA4B,CAA5B;AAMA,SAAO;AAACF,IAAAA,QAAD,EAACA,QAAD;AAAWJ,IAAAA,YAAAA,EAAAA;AAAX,GAAP;AACD","sourcesContent":["import React from 'react';\n\ninterface Props {\n  id: string;\n  value: string;\n}\n\nconst hiddenStyles: React.CSSProperties = {\n  display: 'none',\n};\n\nexport function HiddenText({id, value}: Props) {\n  return (\n    <div id={id} style={hiddenStyles}>\n      {value}\n    </div>\n  );\n}\n","import React from 'react';\n\nexport interface Props {\n  id: string;\n  announcement: string;\n}\n\n// Hide element visually but keep it readable by screen readers\nconst visuallyHidden: React.CSSProperties = {\n  position: 'absolute',\n  width: 1,\n  height: 1,\n  margin: -1,\n  border: 0,\n  padding: 0,\n  overflow: 'hidden',\n  clip: 'rect(0 0 0 0)',\n  clipPath: 'inset(100%)',\n  whiteSpace: 'nowrap',\n};\n\nexport function LiveRegion({id, announcement}: Props) {\n  return (\n    <div\n      id={id}\n      style={visuallyHidden}\n      role=\"status\"\n      aria-live=\"assertive\"\n      aria-atomic\n    >\n      {announcement}\n    </div>\n  );\n}\n","import {useCallback, useState} from 'react';\n\nexport function useAnnouncement() {\n  const [announcement, setAnnouncement] = useState('');\n  const announce = useCallback((value: string | undefined) => {\n    if (value != null) {\n      setAnnouncement(value);\n    }\n  }, []);\n\n  return {announce, announcement} as const;\n}\n"]},"metadata":{},"sourceType":"module"}