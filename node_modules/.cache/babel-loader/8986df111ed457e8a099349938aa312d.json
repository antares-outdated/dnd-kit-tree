{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { describe, PropTypes } from 'react-desc';\nimport { getAvailableAtBadge } from '../../utils/mixins';\nimport { themeDocUtils } from '../../utils/themeDocUtils';\nexport var doc = function doc(FileInput) {\n  var DocumentedFileInput = describe(FileInput).availableAt(getAvailableAtBadge('FileInput', 'Input')).description('A control to input one or more files.').usage(\"import { FileInput } from 'grommet';\\n<FileInput id='file' name='file' />\").intrinsicElement('input');\n  DocumentedFileInput.propTypes = {\n    disabled: PropTypes.bool.description('Whether the control is disabled.').defaultValue(undefined),\n    id: PropTypes.string.description('The id attribute of the input.'),\n    messages: PropTypes.shape({\n      browse: PropTypes.string,\n      dropPrompt: PropTypes.string,\n      dropPromptMultiple: PropTypes.string,\n      files: PropTypes.string,\n      remove: PropTypes.string,\n      removeAll: PropTypes.string\n    }).description(\"Custom messages for FileInput. Used for accessibility by screen\\n        readers.\").defaultValue({\n      browse: 'browse',\n      dropPrompt: 'Drop file here or',\n      dropPromptMultiple: 'Drop files here or',\n      files: 'files',\n      remove: 'remove',\n      removeAll: 'remove all'\n    }),\n    multiple: PropTypes.oneOfType([PropTypes.bool, PropTypes.shape({\n      aggregateThreshold: PropTypes.number\n    })]).description(\"Whether to allow multiple files. If an object is supplied,\\n        'aggregageThreshold' indicates the maximum number of individual\\n        files to show. Above this, only a single message describing the\\n        number of files will be shown.\").defaultValue(undefined),\n    name: PropTypes.string.description(\"The name attribute of the input. This is required when used within\\n      a Form.\"),\n    onChange: PropTypes.func.description(\"Function that will be called when one or more files are added to \\n      the input. The file(s) can be found in event.target.files.\"),\n    renderFile: PropTypes.func.description(\"Provides custom rendering of the file. If not provided, the file's\\n      name will be shown. It will be passed the browser File object as\\n      an argument. For example: (file) => <Text>{file.name}</Text>\")\n  };\n  return DocumentedFileInput;\n};\nexport var themeDoc = _extends({}, themeDocUtils.inputStyle, {\n  'fileInput.background': {\n    description: 'The background prop for the container.',\n    type: 'string | object',\n    defaultValue: undefined\n  },\n  'fileInput.border': {\n    description: 'The border prop for the container.',\n    type: 'string | object',\n    defaultValue: {\n      side: 'all',\n      size: 'small',\n      style: 'dashed'\n    }\n  },\n  'fileInput.dragOver.background': {\n    description: 'Background to use when dragging over.',\n    type: 'string | object',\n    defaultValue: undefined\n  },\n  'fileInput.dragOver.border': {\n    description: 'Background to use when dragging over.',\n    type: 'string | object',\n    defaultValue: {\n      color: 'red'\n    }\n  },\n  'fileInput.dragOver.extend': {\n    description: 'Any additional style for container when dragging over it.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  },\n  'fileInput.extend': {\n    description: 'Any additional style for container.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  },\n  'fileInput.hover.background': {\n    description: 'Background to use when hovering.',\n    type: 'string | object',\n    defaultValue: undefined\n  },\n  'fileInput.hover.border': {\n    description: 'Background to use when hovering.',\n    type: 'string | object',\n    defaultValue: {\n      color: 'brand'\n    }\n  },\n  'fileInput.hover.extend': {\n    description: 'Any additional style for container when hovering over it.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  },\n  'fileInput.icons.remove': {\n    description: 'The icon to use for the control to remove a chosen file.',\n    type: 'React.Element',\n    defaultValue: 'FormClose'\n  },\n  'fileInput.label': {\n    description: 'The Text props to use for the file label.',\n    type: 'object',\n    defaultValue: {\n      margin: 'small'\n    }\n  },\n  'fileInput.message': {\n    description: \"The Text props to use for the message shown before a file\\n      has been selected.\",\n    type: 'object',\n    defaultValue: {\n      margin: 'small'\n    }\n  },\n  'fileInput.pad': {\n    description: 'The pad prop for the container.',\n    type: 'string | object',\n    defaultValue: undefined\n  },\n  'fileInput.round': {\n    description: 'The round prop for the container.',\n    type: 'string | object',\n    defaultValue: undefined\n  }\n});","map":{"version":3,"sources":["C:/Users/antaresofficial/Desktop/tree/node_modules/grommet/es6/components/FileInput/doc.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","describe","PropTypes","getAvailableAtBadge","themeDocUtils","doc","FileInput","DocumentedFileInput","availableAt","description","usage","intrinsicElement","propTypes","disabled","bool","defaultValue","undefined","id","string","messages","shape","browse","dropPrompt","dropPromptMultiple","files","remove","removeAll","multiple","oneOfType","aggregateThreshold","number","name","onChange","func","renderFile","themeDoc","inputStyle","type","side","size","style","color","margin"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { describe, PropTypes } from 'react-desc';\nimport { getAvailableAtBadge } from '../../utils/mixins';\nimport { themeDocUtils } from '../../utils/themeDocUtils';\nexport var doc = function doc(FileInput) {\n  var DocumentedFileInput = describe(FileInput).availableAt(getAvailableAtBadge('FileInput', 'Input')).description('A control to input one or more files.').usage(\"import { FileInput } from 'grommet';\\n<FileInput id='file' name='file' />\").intrinsicElement('input');\n  DocumentedFileInput.propTypes = {\n    disabled: PropTypes.bool.description('Whether the control is disabled.').defaultValue(undefined),\n    id: PropTypes.string.description('The id attribute of the input.'),\n    messages: PropTypes.shape({\n      browse: PropTypes.string,\n      dropPrompt: PropTypes.string,\n      dropPromptMultiple: PropTypes.string,\n      files: PropTypes.string,\n      remove: PropTypes.string,\n      removeAll: PropTypes.string\n    }).description(\"Custom messages for FileInput. Used for accessibility by screen\\n        readers.\").defaultValue({\n      browse: 'browse',\n      dropPrompt: 'Drop file here or',\n      dropPromptMultiple: 'Drop files here or',\n      files: 'files',\n      remove: 'remove',\n      removeAll: 'remove all'\n    }),\n    multiple: PropTypes.oneOfType([PropTypes.bool, PropTypes.shape({\n      aggregateThreshold: PropTypes.number\n    })]).description(\"Whether to allow multiple files. If an object is supplied,\\n        'aggregageThreshold' indicates the maximum number of individual\\n        files to show. Above this, only a single message describing the\\n        number of files will be shown.\").defaultValue(undefined),\n    name: PropTypes.string.description(\"The name attribute of the input. This is required when used within\\n      a Form.\"),\n    onChange: PropTypes.func.description(\"Function that will be called when one or more files are added to \\n      the input. The file(s) can be found in event.target.files.\"),\n    renderFile: PropTypes.func.description(\"Provides custom rendering of the file. If not provided, the file's\\n      name will be shown. It will be passed the browser File object as\\n      an argument. For example: (file) => <Text>{file.name}</Text>\")\n  };\n  return DocumentedFileInput;\n};\nexport var themeDoc = _extends({}, themeDocUtils.inputStyle, {\n  'fileInput.background': {\n    description: 'The background prop for the container.',\n    type: 'string | object',\n    defaultValue: undefined\n  },\n  'fileInput.border': {\n    description: 'The border prop for the container.',\n    type: 'string | object',\n    defaultValue: {\n      side: 'all',\n      size: 'small',\n      style: 'dashed'\n    }\n  },\n  'fileInput.dragOver.background': {\n    description: 'Background to use when dragging over.',\n    type: 'string | object',\n    defaultValue: undefined\n  },\n  'fileInput.dragOver.border': {\n    description: 'Background to use when dragging over.',\n    type: 'string | object',\n    defaultValue: {\n      color: 'red'\n    }\n  },\n  'fileInput.dragOver.extend': {\n    description: 'Any additional style for container when dragging over it.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  },\n  'fileInput.extend': {\n    description: 'Any additional style for container.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  },\n  'fileInput.hover.background': {\n    description: 'Background to use when hovering.',\n    type: 'string | object',\n    defaultValue: undefined\n  },\n  'fileInput.hover.border': {\n    description: 'Background to use when hovering.',\n    type: 'string | object',\n    defaultValue: {\n      color: 'brand'\n    }\n  },\n  'fileInput.hover.extend': {\n    description: 'Any additional style for container when hovering over it.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  },\n  'fileInput.icons.remove': {\n    description: 'The icon to use for the control to remove a chosen file.',\n    type: 'React.Element',\n    defaultValue: 'FormClose'\n  },\n  'fileInput.label': {\n    description: 'The Text props to use for the file label.',\n    type: 'object',\n    defaultValue: {\n      margin: 'small'\n    }\n  },\n  'fileInput.message': {\n    description: \"The Text props to use for the message shown before a file\\n      has been selected.\",\n    type: 'object',\n    defaultValue: {\n      margin: 'small'\n    }\n  },\n  'fileInput.pad': {\n    description: 'The pad prop for the container.',\n    type: 'string | object',\n    defaultValue: undefined\n  },\n  'fileInput.round': {\n    description: 'The round prop for the container.',\n    type: 'string | object',\n    defaultValue: undefined\n  }\n});"]},"metadata":{},"sourceType":"module"}