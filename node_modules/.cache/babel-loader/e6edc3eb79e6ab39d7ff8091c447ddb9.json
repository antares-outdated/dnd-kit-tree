{"ast":null,"code":"export var points = ['circle', 'diamond', 'square', 'star', 'triangle', 'triangleDown'];\nexport var heightYGranularity = {\n  xxsmall: {\n    fine: 2,\n    medium: 2\n  },\n  xsmall: {\n    fine: 3,\n    medium: 2\n  },\n  small: {\n    fine: 5,\n    medium: 3\n  },\n  medium: {\n    fine: 7,\n    medium: 5\n  },\n  large: {\n    fine: 9,\n    medium: 5\n  },\n  xlarge: {\n    fine: 11,\n    medium: 5\n  }\n};\nexport var halfPad = {\n  xlarge: 'large',\n  large: 'medium',\n  medium: 'small',\n  small: 'xsmall',\n  xsmall: 'xxsmall'\n};\nexport var doublePad = {\n  large: 'xlarge',\n  medium: 'large',\n  small: 'medium',\n  xsmall: 'small',\n  xxsmall: 'xsmall'\n};\nexport var createDateFormat = function createDateFormat(firstValue, lastValue, full) {\n  var dateFormat;\n  var startDate = new Date(firstValue);\n  var endDate = new Date(lastValue);\n\n  if ( // check for valid dates, this is the fastest way\n  !Number.isNaN(startDate.getTime()) && !Number.isNaN(endDate.getTime())) {\n    var delta = Math.abs(endDate - startDate);\n    var options;\n    if (delta < 60000) // less than 1 minute\n      options = full ? {\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        day: undefined\n      } : {\n        second: '2-digit',\n        day: undefined\n      };else if (delta < 3600000) // less than 1 hour\n      options = full ? {\n        hour: 'numeric',\n        minute: '2-digit',\n        day: undefined\n      } : {\n        minute: '2-digit',\n        day: undefined\n      };else if (delta < 86400000) // less than 1 day\n      options = {\n        hour: 'numeric'\n      };else if (delta < 2592000000) // less than 30 days\n      options = {\n        month: full ? 'short' : 'numeric',\n        day: 'numeric'\n      };else if (delta < 31557600000) // less than 1 year\n      options = {\n        month: full ? 'long' : 'short'\n      }; // 1 year or more\n    else options = {\n      year: 'numeric'\n    };\n    if (options) dateFormat = new Intl.DateTimeFormat(undefined, options).format;\n  }\n\n  return dateFormat;\n};","map":{"version":3,"sources":["C:/Users/antaresofficial/Desktop/tree/node_modules/grommet/es6/components/DataChart/utils.js"],"names":["points","heightYGranularity","xxsmall","fine","medium","xsmall","small","large","xlarge","halfPad","doublePad","createDateFormat","firstValue","lastValue","full","dateFormat","startDate","Date","endDate","Number","isNaN","getTime","delta","Math","abs","options","hour","minute","second","day","undefined","month","year","Intl","DateTimeFormat","format"],"mappings":"AAAA,OAAO,IAAIA,MAAM,GAAG,CAAC,QAAD,EAAW,SAAX,EAAsB,QAAtB,EAAgC,MAAhC,EAAwC,UAAxC,EAAoD,cAApD,CAAb;AACP,OAAO,IAAIC,kBAAkB,GAAG;AAC9BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,MAAM,EAAE;AAFD,GADqB;AAK9BC,EAAAA,MAAM,EAAE;AACNF,IAAAA,IAAI,EAAE,CADA;AAENC,IAAAA,MAAM,EAAE;AAFF,GALsB;AAS9BE,EAAAA,KAAK,EAAE;AACLH,IAAAA,IAAI,EAAE,CADD;AAELC,IAAAA,MAAM,EAAE;AAFH,GATuB;AAa9BA,EAAAA,MAAM,EAAE;AACND,IAAAA,IAAI,EAAE,CADA;AAENC,IAAAA,MAAM,EAAE;AAFF,GAbsB;AAiB9BG,EAAAA,KAAK,EAAE;AACLJ,IAAAA,IAAI,EAAE,CADD;AAELC,IAAAA,MAAM,EAAE;AAFH,GAjBuB;AAqB9BI,EAAAA,MAAM,EAAE;AACNL,IAAAA,IAAI,EAAE,EADA;AAENC,IAAAA,MAAM,EAAE;AAFF;AArBsB,CAAzB;AA0BP,OAAO,IAAIK,OAAO,GAAG;AACnBD,EAAAA,MAAM,EAAE,OADW;AAEnBD,EAAAA,KAAK,EAAE,QAFY;AAGnBH,EAAAA,MAAM,EAAE,OAHW;AAInBE,EAAAA,KAAK,EAAE,QAJY;AAKnBD,EAAAA,MAAM,EAAE;AALW,CAAd;AAOP,OAAO,IAAIK,SAAS,GAAG;AACrBH,EAAAA,KAAK,EAAE,QADc;AAErBH,EAAAA,MAAM,EAAE,OAFa;AAGrBE,EAAAA,KAAK,EAAE,QAHc;AAIrBD,EAAAA,MAAM,EAAE,OAJa;AAKrBH,EAAAA,OAAO,EAAE;AALY,CAAhB;AAOP,OAAO,IAAIS,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,UAA1B,EAAsCC,SAAtC,EAAiDC,IAAjD,EAAuD;AACnF,MAAIC,UAAJ;AACA,MAAIC,SAAS,GAAG,IAAIC,IAAJ,CAASL,UAAT,CAAhB;AACA,MAAIM,OAAO,GAAG,IAAID,IAAJ,CAASJ,SAAT,CAAd;;AAEA,OAAK;AACL,GAACM,MAAM,CAACC,KAAP,CAAaJ,SAAS,CAACK,OAAV,EAAb,CAAD,IAAsC,CAACF,MAAM,CAACC,KAAP,CAAaF,OAAO,CAACG,OAAR,EAAb,CADvC,EACwE;AACtE,QAAIC,KAAK,GAAGC,IAAI,CAACC,GAAL,CAASN,OAAO,GAAGF,SAAnB,CAAZ;AACA,QAAIS,OAAJ;AACA,QAAIH,KAAK,GAAG,KAAZ,EAAmB;AACjBG,MAAAA,OAAO,GAAGX,IAAI,GAAG;AACfY,QAAAA,IAAI,EAAE,SADS;AAEfC,QAAAA,MAAM,EAAE,SAFO;AAGfC,QAAAA,MAAM,EAAE,SAHO;AAIfC,QAAAA,GAAG,EAAEC;AAJU,OAAH,GAKV;AACFF,QAAAA,MAAM,EAAE,SADN;AAEFC,QAAAA,GAAG,EAAEC;AAFH,OALJ,CADF,KASS,IAAIR,KAAK,GAAG,OAAZ,EAAqB;AAC5BG,MAAAA,OAAO,GAAGX,IAAI,GAAG;AACfY,QAAAA,IAAI,EAAE,SADS;AAEfC,QAAAA,MAAM,EAAE,SAFO;AAGfE,QAAAA,GAAG,EAAEC;AAHU,OAAH,GAIV;AACFH,QAAAA,MAAM,EAAE,SADN;AAEFE,QAAAA,GAAG,EAAEC;AAFH,OAJJ,CADO,KAQA,IAAIR,KAAK,GAAG,QAAZ,EAAsB;AAC7BG,MAAAA,OAAO,GAAG;AACRC,QAAAA,IAAI,EAAE;AADE,OAAV,CADO,KAGA,IAAIJ,KAAK,GAAG,UAAZ,EAAwB;AAC/BG,MAAAA,OAAO,GAAG;AACRM,QAAAA,KAAK,EAAEjB,IAAI,GAAG,OAAH,GAAa,SADhB;AAERe,QAAAA,GAAG,EAAE;AAFG,OAAV,CADO,KAIA,IAAIP,KAAK,GAAG,WAAZ,EAAyB;AAChCG,MAAAA,OAAO,GAAG;AACRM,QAAAA,KAAK,EAAEjB,IAAI,GAAG,MAAH,GAAY;AADf,OAAV,CADO,CAGJ;AAHI,SAIJW,OAAO,GAAG;AACXO,MAAAA,IAAI,EAAE;AADK,KAAV;AAGL,QAAIP,OAAJ,EAAaV,UAAU,GAAG,IAAIkB,IAAI,CAACC,cAAT,CAAwBJ,SAAxB,EAAmCL,OAAnC,EAA4CU,MAAzD;AACd;;AAED,SAAOpB,UAAP;AACD,CA5CM","sourcesContent":["export var points = ['circle', 'diamond', 'square', 'star', 'triangle', 'triangleDown'];\nexport var heightYGranularity = {\n  xxsmall: {\n    fine: 2,\n    medium: 2\n  },\n  xsmall: {\n    fine: 3,\n    medium: 2\n  },\n  small: {\n    fine: 5,\n    medium: 3\n  },\n  medium: {\n    fine: 7,\n    medium: 5\n  },\n  large: {\n    fine: 9,\n    medium: 5\n  },\n  xlarge: {\n    fine: 11,\n    medium: 5\n  }\n};\nexport var halfPad = {\n  xlarge: 'large',\n  large: 'medium',\n  medium: 'small',\n  small: 'xsmall',\n  xsmall: 'xxsmall'\n};\nexport var doublePad = {\n  large: 'xlarge',\n  medium: 'large',\n  small: 'medium',\n  xsmall: 'small',\n  xxsmall: 'xsmall'\n};\nexport var createDateFormat = function createDateFormat(firstValue, lastValue, full) {\n  var dateFormat;\n  var startDate = new Date(firstValue);\n  var endDate = new Date(lastValue);\n\n  if ( // check for valid dates, this is the fastest way\n  !Number.isNaN(startDate.getTime()) && !Number.isNaN(endDate.getTime())) {\n    var delta = Math.abs(endDate - startDate);\n    var options;\n    if (delta < 60000) // less than 1 minute\n      options = full ? {\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        day: undefined\n      } : {\n        second: '2-digit',\n        day: undefined\n      };else if (delta < 3600000) // less than 1 hour\n      options = full ? {\n        hour: 'numeric',\n        minute: '2-digit',\n        day: undefined\n      } : {\n        minute: '2-digit',\n        day: undefined\n      };else if (delta < 86400000) // less than 1 day\n      options = {\n        hour: 'numeric'\n      };else if (delta < 2592000000) // less than 30 days\n      options = {\n        month: full ? 'short' : 'numeric',\n        day: 'numeric'\n      };else if (delta < 31557600000) // less than 1 year\n      options = {\n        month: full ? 'long' : 'short'\n      }; // 1 year or more\n    else options = {\n        year: 'numeric'\n      };\n    if (options) dateFormat = new Intl.DateTimeFormat(undefined, options).format;\n  }\n\n  return dateFormat;\n};"]},"metadata":{},"sourceType":"module"}