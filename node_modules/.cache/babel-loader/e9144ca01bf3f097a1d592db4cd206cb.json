{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { describe, PropTypes } from 'react-desc';\nimport { genericProps } from '../../utils/prop-types';\nimport { getAvailableAtBadge } from '../../utils/mixins';\nimport { themeDocUtils } from '../../utils/themeDocUtils';\nexport var doc = function doc(Carousel) {\n  var DocumentedCarousel = describe(Carousel).availableAt(getAvailableAtBadge('Carousel', 'Media')).description(\"A carousel that cycles through children. Child components\\n      would typically be Images. It is the caller's responsibility to ensure\\n      that all children are the same size.\").usage(\"import { Carousel } from 'grommet';\\n<Carousel />\").intrinsicElement('div');\n  DocumentedCarousel.propTypes = _extends({}, genericProps, {\n    fill: PropTypes.bool.description(\"Whether to expand to fill\\n      all of the available width and height in the parent container.\"),\n    play: PropTypes.number.description(\"If specified, the number of\\n      milliseconds between automatically transitioning to the next child. It\\n      will loop through all children indefinitely.\"),\n    initialChild: PropTypes.number.description(\"If specified, the index of\\n      the first element to be shown. Defaults to 0.\"),\n    onChild: PropTypes.func.description(\"If specified, this function will \\n      be called with the active index when the currently active carousel \\n      changes.\"),\n    controls: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['arrows', 'selectors'])]).description(\"Whether to show carousel controls and which type of controls.\").defaultValue(true)\n  });\n  return DocumentedCarousel;\n};\nexport var themeDoc = _extends({\n  'carousel.icons.next': {\n    description: 'The icon to use for the next image navigation control.',\n    type: 'element',\n    defaultValue: '<Next />'\n  },\n  'carousel.animation.duration': {\n    description: 'The duration of the Carousel animation.',\n    type: 'number',\n    defaultValue: 1000\n  },\n  'carousel.icons.previous': {\n    description: 'The icon to use for the previous image navigation control.',\n    type: 'element',\n    defaultValue: '<Previous />'\n  },\n  'carousel.icons.current': {\n    description: \"The icon to use on the middle navigation control. \\n      One icon per carousel image.\",\n    type: 'element',\n    defaultValue: '<Next />'\n  },\n  'carousel.icons.color': {\n    description: 'The color used for Carousel icons.',\n    type: \"string | { 'dark': string, 'light': string }\",\n    defaultValue: undefined\n  },\n  'carousel.disabled.icons.color': {\n    description: 'The color used for disabled Carousel icons.',\n    type: \"string | { 'dark': string, 'light': string }\",\n    defaultValue: undefined\n  }\n}, themeDocUtils.iconColor, themeDocUtils.edgeStyle('The possible sizes for margin.'));","map":{"version":3,"sources":["C:/Users/antaresofficial/Desktop/tree/node_modules/grommet/es6/components/Carousel/doc.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","describe","PropTypes","genericProps","getAvailableAtBadge","themeDocUtils","doc","Carousel","DocumentedCarousel","availableAt","description","usage","intrinsicElement","propTypes","fill","bool","play","number","initialChild","onChild","func","controls","oneOfType","oneOf","defaultValue","themeDoc","type","undefined","iconColor","edgeStyle"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { describe, PropTypes } from 'react-desc';\nimport { genericProps } from '../../utils/prop-types';\nimport { getAvailableAtBadge } from '../../utils/mixins';\nimport { themeDocUtils } from '../../utils/themeDocUtils';\nexport var doc = function doc(Carousel) {\n  var DocumentedCarousel = describe(Carousel).availableAt(getAvailableAtBadge('Carousel', 'Media')).description(\"A carousel that cycles through children. Child components\\n      would typically be Images. It is the caller's responsibility to ensure\\n      that all children are the same size.\").usage(\"import { Carousel } from 'grommet';\\n<Carousel />\").intrinsicElement('div');\n  DocumentedCarousel.propTypes = _extends({}, genericProps, {\n    fill: PropTypes.bool.description(\"Whether to expand to fill\\n      all of the available width and height in the parent container.\"),\n    play: PropTypes.number.description(\"If specified, the number of\\n      milliseconds between automatically transitioning to the next child. It\\n      will loop through all children indefinitely.\"),\n    initialChild: PropTypes.number.description(\"If specified, the index of\\n      the first element to be shown. Defaults to 0.\"),\n    onChild: PropTypes.func.description(\"If specified, this function will \\n      be called with the active index when the currently active carousel \\n      changes.\"),\n    controls: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['arrows', 'selectors'])]).description(\"Whether to show carousel controls and which type of controls.\").defaultValue(true)\n  });\n  return DocumentedCarousel;\n};\nexport var themeDoc = _extends({\n  'carousel.icons.next': {\n    description: 'The icon to use for the next image navigation control.',\n    type: 'element',\n    defaultValue: '<Next />'\n  },\n  'carousel.animation.duration': {\n    description: 'The duration of the Carousel animation.',\n    type: 'number',\n    defaultValue: 1000\n  },\n  'carousel.icons.previous': {\n    description: 'The icon to use for the previous image navigation control.',\n    type: 'element',\n    defaultValue: '<Previous />'\n  },\n  'carousel.icons.current': {\n    description: \"The icon to use on the middle navigation control. \\n      One icon per carousel image.\",\n    type: 'element',\n    defaultValue: '<Next />'\n  },\n  'carousel.icons.color': {\n    description: 'The color used for Carousel icons.',\n    type: \"string | { 'dark': string, 'light': string }\",\n    defaultValue: undefined\n  },\n  'carousel.disabled.icons.color': {\n    description: 'The color used for disabled Carousel icons.',\n    type: \"string | { 'dark': string, 'light': string }\",\n    defaultValue: undefined\n  }\n}, themeDocUtils.iconColor, themeDocUtils.edgeStyle('The possible sizes for margin.'));"]},"metadata":{},"sourceType":"module"}