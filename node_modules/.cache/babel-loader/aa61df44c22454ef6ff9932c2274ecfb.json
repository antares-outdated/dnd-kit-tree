{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef, useContext, useMemo } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { parseMetricToNum } from '../../utils';\nimport { defaultProps } from '../../default-props';\nimport { StyledAnalog, StyledHour, StyledMinute, StyledSecond } from './StyledClock'; // this will serve both minutes and hours (360 / 6)\n\nvar ANGLE_UNIT = 6; // 360 / 12\n\nvar HOUR_ANGLE_UNIT = 30;\n\nvar getClockDimensions = function getClockDimensions(theme) {\n  return {\n    size: parseMetricToNum(theme.clock.analog.size.medium),\n    secondSize: parseMetricToNum(theme.clock.analog.second.size),\n    minuteSize: parseMetricToNum(theme.clock.analog.minute.size),\n    hourSize: parseMetricToNum(theme.clock.analog.hour.size)\n  };\n};\n\nvar getClockState = function getClockState(_ref) {\n  var hours = _ref.hours,\n      minutes = _ref.minutes,\n      seconds = _ref.seconds;\n  var hour12 = hours > 12 ? hours - 12 : hours;\n  var minuteAngle = minutes * ANGLE_UNIT;\n  return {\n    // offset hour angle by half of the minute angle so that it gets closer\n    // to the next hour\n    hourAngle: hour12 * HOUR_ANGLE_UNIT + minutes / 2,\n    minuteAngle: minuteAngle,\n    secondAngle: seconds * ANGLE_UNIT\n  };\n};\n\nvar Analog = /*#__PURE__*/forwardRef(function (_ref2, ref) {\n  var elements = _ref2.elements,\n      precision = _ref2.precision,\n      rest = _objectWithoutPropertiesLoose(_ref2, [\"elements\", \"precision\"]);\n\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n\n  var _useMemo = useMemo(function () {\n    return getClockState(elements);\n  }, [elements]),\n      hourAngle = _useMemo.hourAngle,\n      minuteAngle = _useMemo.minuteAngle,\n      secondAngle = _useMemo.secondAngle;\n\n  var _useMemo2 = useMemo(function () {\n    return getClockDimensions(theme);\n  }, [theme]),\n      size = _useMemo2.size,\n      secondSize = _useMemo2.secondSize,\n      minuteSize = _useMemo2.minuteSize,\n      hourSize = _useMemo2.hourSize;\n\n  var halfSize = size / 2;\n  var secondHand;\n\n  if (precision === 'seconds') {\n    secondHand = /*#__PURE__*/React.createElement(StyledSecond, {\n      x1: halfSize,\n      y1: halfSize,\n      x2: halfSize,\n      y2: secondSize,\n      stroke: \"#000000\",\n      strokeLinecap: theme.clock.analog.second.shape,\n      style: {\n        transform: \"rotate(\" + secondAngle + \"deg)\",\n        transformOrigin: halfSize + \"px \" + halfSize + \"px\"\n      }\n    });\n  }\n\n  var minuteHand;\n\n  if (precision === 'seconds' || precision === 'minutes') {\n    minuteHand = /*#__PURE__*/React.createElement(StyledMinute, {\n      x1: halfSize,\n      y1: halfSize,\n      x2: halfSize,\n      y2: minuteSize,\n      stroke: \"#000000\",\n      strokeLinecap: theme.clock.analog.minute.shape,\n      style: {\n        transform: \"rotate(\" + minuteAngle + \"deg)\",\n        transformOrigin: halfSize + \"px \" + halfSize + \"px\"\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(StyledAnalog, _extends({\n    ref: ref,\n    version: \"1.1\",\n    width: size,\n    height: size,\n    preserveAspectRatio: \"xMidYMid meet\",\n    viewBox: \"0 0 \" + size + \" \" + size\n  }, rest), secondHand, minuteHand, /*#__PURE__*/React.createElement(StyledHour, {\n    x1: halfSize,\n    y1: halfSize,\n    x2: halfSize,\n    y2: hourSize,\n    stroke: \"#000000\",\n    strokeLinecap: theme.clock.analog.hour.shape,\n    style: {\n      transform: \"rotate(\" + hourAngle + \"deg)\",\n      transformOrigin: halfSize + \"px \" + halfSize + \"px\"\n    }\n  }));\n});\nAnalog.displayName = 'Analog';\nexport { Analog };","map":{"version":3,"sources":["C:/Users/antaresofficial/Desktop/tree/node_modules/grommet/es6/components/Clock/Analog.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","forwardRef","useContext","useMemo","ThemeContext","parseMetricToNum","defaultProps","StyledAnalog","StyledHour","StyledMinute","StyledSecond","ANGLE_UNIT","HOUR_ANGLE_UNIT","getClockDimensions","theme","size","clock","analog","medium","secondSize","second","minuteSize","minute","hourSize","hour","getClockState","_ref","hours","minutes","seconds","hour12","minuteAngle","hourAngle","secondAngle","Analog","_ref2","ref","elements","precision","rest","_useMemo","_useMemo2","halfSize","secondHand","createElement","x1","y1","x2","y2","stroke","strokeLinecap","shape","style","transform","transformOrigin","minuteHand","version","width","height","preserveAspectRatio","viewBox","displayName"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef, useContext, useMemo } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { parseMetricToNum } from '../../utils';\nimport { defaultProps } from '../../default-props';\nimport { StyledAnalog, StyledHour, StyledMinute, StyledSecond } from './StyledClock'; // this will serve both minutes and hours (360 / 6)\n\nvar ANGLE_UNIT = 6; // 360 / 12\n\nvar HOUR_ANGLE_UNIT = 30;\n\nvar getClockDimensions = function getClockDimensions(theme) {\n  return {\n    size: parseMetricToNum(theme.clock.analog.size.medium),\n    secondSize: parseMetricToNum(theme.clock.analog.second.size),\n    minuteSize: parseMetricToNum(theme.clock.analog.minute.size),\n    hourSize: parseMetricToNum(theme.clock.analog.hour.size)\n  };\n};\n\nvar getClockState = function getClockState(_ref) {\n  var hours = _ref.hours,\n      minutes = _ref.minutes,\n      seconds = _ref.seconds;\n  var hour12 = hours > 12 ? hours - 12 : hours;\n  var minuteAngle = minutes * ANGLE_UNIT;\n  return {\n    // offset hour angle by half of the minute angle so that it gets closer\n    // to the next hour\n    hourAngle: hour12 * HOUR_ANGLE_UNIT + minutes / 2,\n    minuteAngle: minuteAngle,\n    secondAngle: seconds * ANGLE_UNIT\n  };\n};\n\nvar Analog = /*#__PURE__*/forwardRef(function (_ref2, ref) {\n  var elements = _ref2.elements,\n      precision = _ref2.precision,\n      rest = _objectWithoutPropertiesLoose(_ref2, [\"elements\", \"precision\"]);\n\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n\n  var _useMemo = useMemo(function () {\n    return getClockState(elements);\n  }, [elements]),\n      hourAngle = _useMemo.hourAngle,\n      minuteAngle = _useMemo.minuteAngle,\n      secondAngle = _useMemo.secondAngle;\n\n  var _useMemo2 = useMemo(function () {\n    return getClockDimensions(theme);\n  }, [theme]),\n      size = _useMemo2.size,\n      secondSize = _useMemo2.secondSize,\n      minuteSize = _useMemo2.minuteSize,\n      hourSize = _useMemo2.hourSize;\n\n  var halfSize = size / 2;\n  var secondHand;\n\n  if (precision === 'seconds') {\n    secondHand = /*#__PURE__*/React.createElement(StyledSecond, {\n      x1: halfSize,\n      y1: halfSize,\n      x2: halfSize,\n      y2: secondSize,\n      stroke: \"#000000\",\n      strokeLinecap: theme.clock.analog.second.shape,\n      style: {\n        transform: \"rotate(\" + secondAngle + \"deg)\",\n        transformOrigin: halfSize + \"px \" + halfSize + \"px\"\n      }\n    });\n  }\n\n  var minuteHand;\n\n  if (precision === 'seconds' || precision === 'minutes') {\n    minuteHand = /*#__PURE__*/React.createElement(StyledMinute, {\n      x1: halfSize,\n      y1: halfSize,\n      x2: halfSize,\n      y2: minuteSize,\n      stroke: \"#000000\",\n      strokeLinecap: theme.clock.analog.minute.shape,\n      style: {\n        transform: \"rotate(\" + minuteAngle + \"deg)\",\n        transformOrigin: halfSize + \"px \" + halfSize + \"px\"\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(StyledAnalog, _extends({\n    ref: ref,\n    version: \"1.1\",\n    width: size,\n    height: size,\n    preserveAspectRatio: \"xMidYMid meet\",\n    viewBox: \"0 0 \" + size + \" \" + size\n  }, rest), secondHand, minuteHand, /*#__PURE__*/React.createElement(StyledHour, {\n    x1: halfSize,\n    y1: halfSize,\n    x2: halfSize,\n    y2: hourSize,\n    stroke: \"#000000\",\n    strokeLinecap: theme.clock.analog.hour.shape,\n    style: {\n      transform: \"rotate(\" + hourAngle + \"deg)\",\n      transformOrigin: halfSize + \"px \" + halfSize + \"px\"\n    }\n  }));\n});\nAnalog.displayName = 'Analog';\nexport { Analog };"]},"metadata":{},"sourceType":"module"}