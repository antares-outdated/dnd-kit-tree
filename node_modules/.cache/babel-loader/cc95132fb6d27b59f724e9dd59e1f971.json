{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef, useMemo, useRef, useState } from 'react';\nimport { useLayoutEffect } from '../../utils/use-isomorphic-layout-effect';\nimport { Box } from '../Box';\nimport { Chart, calcs, calcBounds } from '../Chart';\nimport { Grid } from '../Grid';\nimport { Stack } from '../Stack';\nimport { Detail } from './Detail';\nimport { Legend } from './Legend';\nimport { XAxis } from './XAxis';\nimport { YAxis } from './YAxis';\nimport { XGuide } from './XGuide';\nimport { YGuide } from './YGuide';\nimport { createDateFormat, halfPad, heightYGranularity, points } from './utils'; // DataChart takes a generic data array of objects plus as few properties\n// as possible, and creates a Stack of Charts with x and y axes, a legend,\n// and interactive detail.\n// Much of the code here-in involves the \"few properties\" aspect where we\n// normalize and automatically handle whatever the caller didn't specify.\n\nvar DataChart = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var a11yTitle = _ref.a11yTitle,\n      _ref$axis = _ref.axis,\n      axisProp = _ref$axis === void 0 ? true : _ref$axis,\n      _ref$bounds = _ref.bounds,\n      boundsProp = _ref$bounds === void 0 ? 'align' : _ref$bounds,\n      chart = _ref.chart,\n      _ref$data = _ref.data,\n      data = _ref$data === void 0 ? [] : _ref$data,\n      detail = _ref.detail,\n      _ref$gap = _ref.gap,\n      gap = _ref$gap === void 0 ? 'small' : _ref$gap,\n      guideProp = _ref.guide,\n      legend = _ref.legend,\n      padProp = _ref.pad,\n      seriesProp = _ref.series,\n      size = _ref.size,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"a11yTitle\", \"axis\", \"bounds\", \"chart\", \"data\", \"detail\", \"gap\", \"guide\", \"legend\", \"pad\", \"series\", \"size\"]); // legend interaction, if any\n\n\n  var _useState = useState(),\n      activeProperty = _useState[0],\n      setActiveProperty = _useState[1]; // refs used for ie11 not having Grid\n\n\n  var xRef = useRef();\n  var spacerRef = useRef(); // normalize seriesProp to an array of objects, one per property\n\n  var series = useMemo(function () {\n    if (Array.isArray(seriesProp)) return seriesProp.filter(function (s) {\n      return s.property || typeof s === 'string';\n    }).map(function (s) {\n      return typeof s === 'string' ? {\n        property: s\n      } : s;\n    });\n    if (typeof seriesProp === 'string') return [{\n      property: seriesProp\n    }];\n    if (seriesProp) return [seriesProp];\n    return [];\n  }, [seriesProp]);\n\n  var getPropertySeries = function getPropertySeries(prop) {\n    return series.find(function (_ref2) {\n      var property = _ref2.property;\n      return prop === property;\n    });\n  }; // Normalize chart to an array of objects.\n  // Each chart has one or more properties associated with it.\n  // A stacked bar chart has an array of properties.\n  // A point chart can have x, y, thickness, and color each driven\n  // by a separate property.\n\n\n  var charts = useMemo(function () {\n    if (!chart) {\n      if (series.length === 1) return series.filter(function (s) {\n        return s.property;\n      }).map(function (s) {\n        return {\n          property: s.property\n        };\n      }); // if we have more than one property, we'll use the first for\n      // the x-axis and we'll plot the rest\n\n      return series.slice(1).map(function (s) {\n        return {\n          property: s.property\n        };\n      });\n    }\n\n    if (Array.isArray(chart)) return chart.map(function (c) {\n      return typeof c === 'string' ? {\n        property: c\n      } : c;\n    }).filter(function (_ref3) {\n      var property = _ref3.property;\n      return property;\n    });\n    if (typeof chart === 'string') return [{\n      property: chart\n    }];\n    if (chart) return [chart];\n    return [];\n  }, [chart, series]); // map the series property values into their own arrays\n\n  var seriesValues = useMemo(function () {\n    var result = {};\n    series.forEach(function (_ref4) {\n      var property = _ref4.property;\n      result[property] = data.map(function (d) {\n        return d[property];\n      });\n    });\n    return result;\n  }, [data, series]); // Setup the values property for each chart.\n  // The index into 'charts' can be used to index into 'chartValues'.\n\n  var chartValues = useMemo(function () {\n    return charts.map(function (_ref5) {\n      var opacity = _ref5.opacity,\n          property = _ref5.property,\n          type = _ref5.type;\n\n      if (property) {\n        if (Array.isArray(property)) {\n          // A range chart or a stacked bar chart have multiple properties.\n          // In this case, this returns an array of values,\n          // one per property.\n          if (type === 'bars') {\n            // Further down, where we render, each property is rendered\n            // using a separate Chart component and the values are stacked\n            // such that they line up appropriately.\n            var totals = [];\n            return property.map(function (cp) {\n              // handle object or string\n              var aProperty = cp.property || cp;\n              var values = seriesValues[aProperty];\n              if (!values) return undefined; // property name isn't valid\n\n              return values.map(function (v, i) {\n                var base = totals[i] || 0;\n                totals[i] = base + v;\n                return [i, base, base + v];\n              });\n            });\n          }\n\n          return data.map(function (_, index) {\n            return [index].concat(property.map(function (p) {\n              return seriesValues[p] ? seriesValues[p][index] : data[index][p];\n            }));\n          });\n        }\n\n        if (typeof property === 'object') {\n          // When 'property' is an array, the keys of this array indicate\n          // which property drives which part of the rendered Chart.\n          var color = property.color,\n              thickness = property.thickness,\n              x = property.x,\n              y = property.y,\n              y2 = property.y2;\n          return seriesValues[x].map(function (value, index) {\n            var aValue = {\n              value: [value]\n            };\n            aValue.value.push(seriesValues[y][index]);\n            if (y2) aValue.value.push(seriesValues[y2][index]);\n\n            if (thickness) {\n              var t = seriesValues[thickness.property || thickness][index];\n              aValue.thickness = thickness.transform ? thickness.transform(t) : t;\n            }\n\n            if (color) {\n              var c = seriesValues[color.property || color][index];\n              aValue.color = color.transform ? color.transform(c) : c;\n            }\n\n            if (opacity) aValue.opacity = opacity;\n            return aValue;\n          });\n        }\n\n        return seriesValues[property];\n      }\n\n      return undefined;\n    });\n  }, [charts, data, seriesValues]); // map granularities to work well with the number of data points we have\n\n  var granularities = useMemo(function () {\n    var medium; // determine a good medium granularity that will align well with the\n    // length of the data\n\n    var steps = data.length - 1; // special case property driven point charts\n\n    if (charts[0] && typeof charts[0].property === 'object') medium = 3;else if (steps < 4) medium = data.length;else if (steps === 4) medium = 3;else if (steps % 4 === 0) medium = 5;else if (steps % 3 === 0) medium = 4;else if (steps % 2 === 0) medium = 3;else medium = 2;\n    return {\n      x: {\n        coarse: 2,\n        fine: data.length,\n        medium: medium\n      },\n      y: _extends({}, heightYGranularity[size && size.height || 'small'] || {\n        fine: 5,\n        medium: 3\n      }, {\n        coarse: 2\n      })\n    };\n  }, [charts, data.length, size]); // normalize axis to objects, convert granularity to a number\n\n  var axis = useMemo(function () {\n    if (!axisProp) return undefined;\n    var result = {};\n    if (axisProp === true || axisProp.x === true) result.x = {};\n    if (axisProp === true || axisProp.y === true) result.y = {};\n    if (!result.x && axisProp.x) result.x = typeof axisProp.x === 'string' ? {\n      property: axisProp.x\n    } : _extends({}, axisProp.x);\n    if (!result.y && axisProp.y) result.y = typeof axisProp.y === 'string' ? {\n      property: axisProp.y\n    } : _extends({}, axisProp.y);\n\n    if (result.x) {\n      if (!result.x.property) {\n        // see if we have a point chart that has an x property\n        if (data && data[0]) {\n          if (data[0].date) result.x.property = 'date';else if (data[0].time) result.x.property = 'time';\n        }\n      }\n\n      if (!result.x.granularity) result.x.granularity = 'coarse';\n    }\n\n    if (result.y) {\n      if (!result.y.property && charts[0]) // see if we have a point chart that has an x property\n        result.y.property = charts[0].property.y || charts[0].property;\n      if (!result.y.granularity) result.y.granularity = 'coarse';\n    } // calculate number of entries based on granularity\n\n\n    if (result.x) {\n      var _result$x$granularity = result.x.granularity,\n          granularity = _result$x$granularity === void 0 ? 'coarse' : _result$x$granularity;\n      result.x.count = granularities.x[granularity];\n    }\n\n    if (result.y) {\n      var _result$y$granularity = result.y.granularity,\n          _granularity = _result$y$granularity === void 0 ? 'coarse' : _result$y$granularity;\n\n      result.y.count = granularities.y[_granularity];\n    }\n\n    return result;\n  }, [axisProp, data, charts, granularities]); // calculate axis, bounds, and thickness for each chart\n\n  var chartProps = useMemo(function () {\n    var steps = [];\n    var coarseness = [undefined, 5];\n\n    if (axis && axis.x) {\n      var _axis$x$granularity = axis.x.granularity,\n          granularity = _axis$x$granularity === void 0 ? 'coarse' : _axis$x$granularity;\n      steps[0] = granularities.x[granularity] - 1;\n    } else steps[0] = data.length - 1;\n\n    if (axis && axis.y) {\n      var _axis$y$granularity = axis.y.granularity,\n          _granularity2 = _axis$y$granularity === void 0 ? 'coarse' : _axis$y$granularity;\n\n      steps[1] = granularities.y[_granularity2] - 1;\n    } else steps[1] = 1;\n\n    var chartBounds = chartValues.map(function (_, index) {\n      if (charts[index].type === 'bars') {\n        // merge values for bars case\n        var mergedValues = chartValues[index][0].slice(0);\n        chartValues[index].slice(1).filter(function (values) {\n          return values;\n        }) // property name isn't valid\n        .forEach(function (values) {\n          mergedValues = mergedValues.map(function (__, i) {\n            return [i, Math.min(mergedValues[i][1], values[i][1]), Math.max(mergedValues[i][2], values[i][2])];\n          });\n        });\n        return calcBounds(mergedValues, {\n          coarseness: coarseness,\n          steps: steps\n        });\n      } // if this is a data driven x chart, set coarseness for x\n\n\n      return calcBounds(chartValues[index], {\n        coarseness: charts[index].property.x ? [5, 5] : coarseness,\n        steps: steps\n      });\n    });\n\n    if (boundsProp === 'align' && chartBounds.length) {\n      var alignedBounds = [].concat(chartBounds[0]);\n      chartBounds.forEach(function (bounds) {\n        alignedBounds[0][0] = Math.min(alignedBounds[0][0], bounds[0][0]);\n        alignedBounds[0][1] = Math.max(alignedBounds[0][1], bounds[0][1]);\n        alignedBounds[1][0] = Math.min(alignedBounds[1][0], bounds[1][0]);\n        alignedBounds[1][1] = Math.max(alignedBounds[1][1], bounds[1][1]);\n      });\n      chartBounds = chartBounds.map(function () {\n        return alignedBounds;\n      });\n    }\n\n    return chartValues.map(function (values, index) {\n      var calcValues = charts[index].type === 'bars' ? values[0] : values;\n      return calcs(calcValues, {\n        bounds: chartBounds[index],\n        steps: steps\n      });\n    });\n  }, [axis, boundsProp, charts, chartValues, data, granularities]); // normalize how we style data properties for use by Legend and Detail\n\n  var seriesStyles = useMemo(function () {\n    var result = {}; // start from what we were explicitly given\n\n    charts.forEach(function (_ref6, index) {\n      var color = _ref6.color,\n          point = _ref6.point,\n          property = _ref6.property,\n          thickness = _ref6.thickness,\n          type = _ref6.type;\n      var calcThickness = chartProps[index].thickness;\n\n      if (typeof property === 'object' && !Array.isArray(property)) {\n        // data driven point chart\n        Object.keys(property).forEach(function (aspect) {\n          var prop = property[aspect];\n          if (!result[prop.property || prop]) result[prop.property || prop] = {\n            aspect: aspect\n          };\n        });\n      } else {\n        var props = Array.isArray(property) ? property : [property];\n        props.forEach(function (prop) {\n          var p = prop.property || prop;\n          var pColor = prop.color || color;\n          if (!result[p]) result[p] = {};\n          if (pColor && !result[p].color) result[p].color = pColor;\n          if (point && !result[p].point) result[p].point = point;else if (type === 'point') result[p].point = false;\n          if ((thickness || calcThickness) && !result[p].thickness) result[p].thickness = thickness || calcThickness;\n        });\n      }\n    }); // set color for any non-aspect properties we don't have one for yet\n\n    var colorIndex = 0;\n    var pointIndex = 0;\n    Object.keys(result).forEach(function (key) {\n      var seriesStyle = result[key];\n\n      if (!seriesStyle.aspect && !seriesStyle.color) {\n        seriesStyle.color = \"graph-\" + colorIndex;\n        colorIndex += 1;\n      } // set opacity if it isn't set and this isn't the active property\n\n\n      if (activeProperty !== undefined && activeProperty !== key) {\n        seriesStyle.opacity = 'medium';\n      }\n\n      if (seriesStyle.point === false) {\n        seriesStyle.point = points[pointIndex];\n        pointIndex += 1;\n      }\n    });\n    return result;\n  }, [activeProperty, charts, chartProps]); // normalize guide\n\n  var guide = useMemo(function () {\n    if (!guideProp) return undefined;\n    var result;\n\n    if (guideProp === true) {\n      result = {\n        x: {},\n        y: {}\n      };\n    } else {\n      result = {};\n      if (guideProp.x) result.x = _extends({}, guideProp.x);\n      if (guideProp.y) result.y = _extends({}, guideProp.y);\n    } // set counts\n\n\n    if (result.x) {\n      // if no granularity and axis, align count with axis\n      if (!result.x.granularity && axis && axis.x) result.x.count = axis.x.count;\n      if (!result.x.count) result.x.count = granularities.x[result.x.granularity || 'coarse'];\n    }\n\n    if (result.y) {\n      // if no granularity and axis, align count with axis\n      if (!result.y.granularity && axis && axis.y) result.y.count = axis.y.count;\n      if (!result.y.count) result.y.count = granularities.y[result.y.granularity || 'coarse'];\n    }\n\n    return result;\n  }, [axis, granularities, guideProp]); // set the pad to half the thickness, based on the chart types\n\n  var pad = useMemo(function () {\n    if (padProp !== undefined) return padProp;\n    var result = {};\n    charts.forEach(function (_ref7, index) {\n      var type = _ref7.type;\n      var thickness = chartProps[index].thickness;\n      result.horizontal = halfPad[thickness];\n      if (type && type !== 'bar') result.vertical = halfPad[thickness];\n    });\n    return result;\n  }, [chartProps, charts, padProp]);\n  var dateFormats = useMemo(function () {\n    var result = {};\n    var full = axis && axis.x && axis.x.granularity === 'coarse';\n    series.forEach(function (_ref8) {\n      var property = _ref8.property,\n          render = _ref8.render;\n\n      if (!render && data.length > 1 && typeof data[0][property] === 'string') {\n        result[property] = createDateFormat(data[0][property], data[data.length - 1][property], full);\n      }\n    });\n    return result;\n  }, [axis, data, series]); // for ie11, align the spacer Box height to the x-axis height\n\n  useLayoutEffect(function () {\n    if (xRef.current && spacerRef.current) {\n      var rect = xRef.current.getBoundingClientRect();\n      spacerRef.current.style.height = rect.height + \"px\";\n    }\n  }, []);\n\n  var renderValue = function renderValue(serie, dataIndex, valueArg) {\n    var value;\n\n    if (valueArg !== undefined) {\n      if (serie && serie.render) return serie.render(valueArg);\n      value = valueArg;\n    } else {\n      var datum = data[dataIndex];\n      value = datum[serie.property];\n      if (serie && serie.render) return serie.render(value, datum, serie.property);\n    }\n\n    if (serie) {\n      var dateFormat = dateFormats[serie.property];\n      if (dateFormat) return dateFormat(new Date(value));\n      if (serie.prefix) value = \"\" + serie.prefix + value;\n      if (serie.suffix) value = \"\" + value + serie.suffix;\n    }\n\n    return value;\n  }; // TODO: revisit how x/y axis are hooked up to charts and series\n\n\n  var xAxisElement = axis && axis.x && chartProps.length ? /*#__PURE__*/React.createElement(XAxis, {\n    ref: xRef,\n    axis: axis,\n    chartProps: chartProps,\n    data: data,\n    renderValue: renderValue,\n    serie: axis.x.property && getPropertySeries(axis.x.property)\n  }) : null;\n  var yAxisElement = axis && axis.y && chartProps.length ? /*#__PURE__*/React.createElement(YAxis, {\n    axis: axis,\n    chartProps: chartProps,\n    pad: pad,\n    renderValue: renderValue,\n    serie: axis.y.property && getPropertySeries(axis.y.property)\n  }) : null;\n  var stackFill = useMemo(function () {\n    if (size === 'fill' || size && size.width === 'fill' && size.height === 'fill') return true;\n    if (size && size.width === 'fill') return 'horizontal';\n    if (size && size.height === 'fill') return 'vertical';\n    return undefined;\n  }, [size]);\n  var guidingChild = useMemo(function () {\n    var result = 0;\n    if (guide && guide.x) result += 1;\n    if (guide && guide.y) result += 1;\n    return result;\n  }, [guide]);\n  var stackElement = /*#__PURE__*/React.createElement(Stack, {\n    gridArea: \"charts\",\n    guidingChild: guidingChild,\n    fill: stackFill\n  }, guide && guide.x && /*#__PURE__*/React.createElement(XGuide, {\n    guide: guide,\n    pad: pad\n  }), guide && guide.y && /*#__PURE__*/React.createElement(YGuide, {\n    guide: guide,\n    pad: pad\n  }), charts.map(function (_ref9, i) {\n    var prop = _ref9.property,\n        type = _ref9.type,\n        x = _ref9.x,\n        y = _ref9.y,\n        chartRest = _objectWithoutPropertiesLoose(_ref9, [\"property\", \"type\", \"x\", \"y\"]);\n\n    if (type === 'bars') {\n      // reverse to ensure area Charts are stacked in the right order\n      return prop.map(function (cProp, j) {\n        var pProp = cProp.property || cProp;\n        return /*#__PURE__*/React.createElement(Chart // eslint-disable-next-line react/no-array-index-key\n        , _extends({\n          key: j // when property name isn't valid, send empty array\n          ,\n          values: chartValues[i][j] || [],\n          overflow: true\n        }, seriesStyles[pProp], chartProps[i], chartRest, {\n          type: \"bar\",\n          size: size,\n          pad: pad\n        }));\n      }).reverse();\n    }\n\n    return /*#__PURE__*/React.createElement(Chart // eslint-disable-next-line react/no-array-index-key\n    , _extends({\n      key: i,\n      values: chartValues[i],\n      overflow: true\n    }, seriesStyles[prop], chartProps[i], chartRest, {\n      type: type,\n      size: size,\n      pad: pad\n    }));\n  }), detail && /*#__PURE__*/React.createElement(Detail, {\n    activeProperty: activeProperty,\n    axis: axis,\n    data: data,\n    series: series,\n    seriesStyles: seriesStyles,\n    renderValue: renderValue,\n    pad: pad\n  }));\n  var legendElement = legend ? /*#__PURE__*/React.createElement(Legend, {\n    series: series,\n    seriesStyles: seriesStyles,\n    activeProperty: activeProperty,\n    setActiveProperty: setActiveProperty\n  }) : null; // IE11\n\n  if (!Grid.available) {\n    var _content = stackElement;\n\n    if (xAxisElement) {\n      _content = /*#__PURE__*/React.createElement(Box, null, _content, xAxisElement);\n    }\n\n    if (yAxisElement) {\n      _content = /*#__PURE__*/React.createElement(Box, {\n        direction: \"row\"\n      }, /*#__PURE__*/React.createElement(Box, null, yAxisElement, /*#__PURE__*/React.createElement(Box, {\n        ref: spacerRef,\n        flex: false\n      })), _content);\n    }\n\n    if (legendElement) {\n      _content = /*#__PURE__*/React.createElement(Box, null, _content, legendElement);\n    }\n\n    return _content;\n  }\n\n  var content = /*#__PURE__*/React.createElement(Grid, _extends({\n    ref: ref,\n    \"aria-label\": a11yTitle,\n    fill: stackFill,\n    columns: ['auto', stackFill === true || stackFill === 'horizontal' ? 'flex' : 'auto'],\n    rows: [stackFill === true || stackFill === 'vertical' ? 'flex' : 'auto', 'auto'],\n    areas: [{\n      name: 'yAxis',\n      start: [0, 0],\n      end: [0, 0]\n    }, {\n      name: 'xAxis',\n      start: [1, 1],\n      end: [1, 1]\n    }, {\n      name: 'charts',\n      start: [1, 0],\n      end: [1, 0]\n    }],\n    gap: gap\n  }, rest), xAxisElement, yAxisElement, stackElement);\n\n  if (legendElement) {\n    content = /*#__PURE__*/React.createElement(Box, {\n      align: \"start\"\n    }, content, legendElement);\n  }\n\n  return content;\n});\nDataChart.displayName = 'DataChart';\nvar DataChartDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line global-require\n  DataChartDoc = require('./doc').doc(DataChart);\n}\n\nvar DataChartWrapper = DataChartDoc || DataChart;\nexport { DataChartWrapper as DataChart };","map":{"version":3,"sources":["C:/Users/antaresofficial/Desktop/tree/node_modules/grommet/es6/components/DataChart/DataChart.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","forwardRef","useMemo","useRef","useState","useLayoutEffect","Box","Chart","calcs","calcBounds","Grid","Stack","Detail","Legend","XAxis","YAxis","XGuide","YGuide","createDateFormat","halfPad","heightYGranularity","points","DataChart","_ref","ref","a11yTitle","_ref$axis","axis","axisProp","_ref$bounds","bounds","boundsProp","chart","_ref$data","data","detail","_ref$gap","gap","guideProp","guide","legend","padProp","pad","seriesProp","series","size","rest","_useState","activeProperty","setActiveProperty","xRef","spacerRef","Array","isArray","filter","s","property","map","getPropertySeries","prop","find","_ref2","charts","slice","c","_ref3","seriesValues","result","forEach","_ref4","d","chartValues","_ref5","opacity","type","totals","cp","aProperty","values","undefined","v","base","_","index","concat","p","color","thickness","x","y","y2","value","aValue","push","t","transform","granularities","medium","steps","coarse","fine","height","date","time","granularity","_result$x$granularity","count","_result$y$granularity","_granularity","chartProps","coarseness","_axis$x$granularity","_axis$y$granularity","_granularity2","chartBounds","mergedValues","__","Math","min","max","alignedBounds","calcValues","seriesStyles","_ref6","point","calcThickness","aspect","props","pColor","colorIndex","pointIndex","seriesStyle","_ref7","horizontal","vertical","dateFormats","full","_ref8","render","current","rect","getBoundingClientRect","style","renderValue","serie","dataIndex","valueArg","datum","dateFormat","Date","prefix","suffix","xAxisElement","createElement","yAxisElement","stackFill","width","guidingChild","stackElement","gridArea","fill","_ref9","chartRest","cProp","j","pProp","overflow","reverse","legendElement","available","_content","direction","flex","content","columns","rows","areas","name","start","end","align","displayName","DataChartDoc","process","env","NODE_ENV","require","doc","DataChartWrapper"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef, useMemo, useRef, useState } from 'react';\nimport { useLayoutEffect } from '../../utils/use-isomorphic-layout-effect';\nimport { Box } from '../Box';\nimport { Chart, calcs, calcBounds } from '../Chart';\nimport { Grid } from '../Grid';\nimport { Stack } from '../Stack';\nimport { Detail } from './Detail';\nimport { Legend } from './Legend';\nimport { XAxis } from './XAxis';\nimport { YAxis } from './YAxis';\nimport { XGuide } from './XGuide';\nimport { YGuide } from './YGuide';\nimport { createDateFormat, halfPad, heightYGranularity, points } from './utils'; // DataChart takes a generic data array of objects plus as few properties\n// as possible, and creates a Stack of Charts with x and y axes, a legend,\n// and interactive detail.\n// Much of the code here-in involves the \"few properties\" aspect where we\n// normalize and automatically handle whatever the caller didn't specify.\n\nvar DataChart = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var a11yTitle = _ref.a11yTitle,\n      _ref$axis = _ref.axis,\n      axisProp = _ref$axis === void 0 ? true : _ref$axis,\n      _ref$bounds = _ref.bounds,\n      boundsProp = _ref$bounds === void 0 ? 'align' : _ref$bounds,\n      chart = _ref.chart,\n      _ref$data = _ref.data,\n      data = _ref$data === void 0 ? [] : _ref$data,\n      detail = _ref.detail,\n      _ref$gap = _ref.gap,\n      gap = _ref$gap === void 0 ? 'small' : _ref$gap,\n      guideProp = _ref.guide,\n      legend = _ref.legend,\n      padProp = _ref.pad,\n      seriesProp = _ref.series,\n      size = _ref.size,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"a11yTitle\", \"axis\", \"bounds\", \"chart\", \"data\", \"detail\", \"gap\", \"guide\", \"legend\", \"pad\", \"series\", \"size\"]);\n\n  // legend interaction, if any\n  var _useState = useState(),\n      activeProperty = _useState[0],\n      setActiveProperty = _useState[1]; // refs used for ie11 not having Grid\n\n\n  var xRef = useRef();\n  var spacerRef = useRef(); // normalize seriesProp to an array of objects, one per property\n\n  var series = useMemo(function () {\n    if (Array.isArray(seriesProp)) return seriesProp.filter(function (s) {\n      return s.property || typeof s === 'string';\n    }).map(function (s) {\n      return typeof s === 'string' ? {\n        property: s\n      } : s;\n    });\n    if (typeof seriesProp === 'string') return [{\n      property: seriesProp\n    }];\n    if (seriesProp) return [seriesProp];\n    return [];\n  }, [seriesProp]);\n\n  var getPropertySeries = function getPropertySeries(prop) {\n    return series.find(function (_ref2) {\n      var property = _ref2.property;\n      return prop === property;\n    });\n  }; // Normalize chart to an array of objects.\n  // Each chart has one or more properties associated with it.\n  // A stacked bar chart has an array of properties.\n  // A point chart can have x, y, thickness, and color each driven\n  // by a separate property.\n\n\n  var charts = useMemo(function () {\n    if (!chart) {\n      if (series.length === 1) return series.filter(function (s) {\n        return s.property;\n      }).map(function (s) {\n        return {\n          property: s.property\n        };\n      }); // if we have more than one property, we'll use the first for\n      // the x-axis and we'll plot the rest\n\n      return series.slice(1).map(function (s) {\n        return {\n          property: s.property\n        };\n      });\n    }\n\n    if (Array.isArray(chart)) return chart.map(function (c) {\n      return typeof c === 'string' ? {\n        property: c\n      } : c;\n    }).filter(function (_ref3) {\n      var property = _ref3.property;\n      return property;\n    });\n    if (typeof chart === 'string') return [{\n      property: chart\n    }];\n    if (chart) return [chart];\n    return [];\n  }, [chart, series]); // map the series property values into their own arrays\n\n  var seriesValues = useMemo(function () {\n    var result = {};\n    series.forEach(function (_ref4) {\n      var property = _ref4.property;\n      result[property] = data.map(function (d) {\n        return d[property];\n      });\n    });\n    return result;\n  }, [data, series]); // Setup the values property for each chart.\n  // The index into 'charts' can be used to index into 'chartValues'.\n\n  var chartValues = useMemo(function () {\n    return charts.map(function (_ref5) {\n      var opacity = _ref5.opacity,\n          property = _ref5.property,\n          type = _ref5.type;\n\n      if (property) {\n        if (Array.isArray(property)) {\n          // A range chart or a stacked bar chart have multiple properties.\n          // In this case, this returns an array of values,\n          // one per property.\n          if (type === 'bars') {\n            // Further down, where we render, each property is rendered\n            // using a separate Chart component and the values are stacked\n            // such that they line up appropriately.\n            var totals = [];\n            return property.map(function (cp) {\n              // handle object or string\n              var aProperty = cp.property || cp;\n              var values = seriesValues[aProperty];\n              if (!values) return undefined; // property name isn't valid\n\n              return values.map(function (v, i) {\n                var base = totals[i] || 0;\n                totals[i] = base + v;\n                return [i, base, base + v];\n              });\n            });\n          }\n\n          return data.map(function (_, index) {\n            return [index].concat(property.map(function (p) {\n              return seriesValues[p] ? seriesValues[p][index] : data[index][p];\n            }));\n          });\n        }\n\n        if (typeof property === 'object') {\n          // When 'property' is an array, the keys of this array indicate\n          // which property drives which part of the rendered Chart.\n          var color = property.color,\n              thickness = property.thickness,\n              x = property.x,\n              y = property.y,\n              y2 = property.y2;\n          return seriesValues[x].map(function (value, index) {\n            var aValue = {\n              value: [value]\n            };\n            aValue.value.push(seriesValues[y][index]);\n            if (y2) aValue.value.push(seriesValues[y2][index]);\n\n            if (thickness) {\n              var t = seriesValues[thickness.property || thickness][index];\n              aValue.thickness = thickness.transform ? thickness.transform(t) : t;\n            }\n\n            if (color) {\n              var c = seriesValues[color.property || color][index];\n              aValue.color = color.transform ? color.transform(c) : c;\n            }\n\n            if (opacity) aValue.opacity = opacity;\n            return aValue;\n          });\n        }\n\n        return seriesValues[property];\n      }\n\n      return undefined;\n    });\n  }, [charts, data, seriesValues]); // map granularities to work well with the number of data points we have\n\n  var granularities = useMemo(function () {\n    var medium; // determine a good medium granularity that will align well with the\n    // length of the data\n\n    var steps = data.length - 1; // special case property driven point charts\n\n    if (charts[0] && typeof charts[0].property === 'object') medium = 3;else if (steps < 4) medium = data.length;else if (steps === 4) medium = 3;else if (steps % 4 === 0) medium = 5;else if (steps % 3 === 0) medium = 4;else if (steps % 2 === 0) medium = 3;else medium = 2;\n    return {\n      x: {\n        coarse: 2,\n        fine: data.length,\n        medium: medium\n      },\n      y: _extends({}, heightYGranularity[size && size.height || 'small'] || {\n        fine: 5,\n        medium: 3\n      }, {\n        coarse: 2\n      })\n    };\n  }, [charts, data.length, size]); // normalize axis to objects, convert granularity to a number\n\n  var axis = useMemo(function () {\n    if (!axisProp) return undefined;\n    var result = {};\n    if (axisProp === true || axisProp.x === true) result.x = {};\n    if (axisProp === true || axisProp.y === true) result.y = {};\n    if (!result.x && axisProp.x) result.x = typeof axisProp.x === 'string' ? {\n      property: axisProp.x\n    } : _extends({}, axisProp.x);\n    if (!result.y && axisProp.y) result.y = typeof axisProp.y === 'string' ? {\n      property: axisProp.y\n    } : _extends({}, axisProp.y);\n\n    if (result.x) {\n      if (!result.x.property) {\n        // see if we have a point chart that has an x property\n        if (data && data[0]) {\n          if (data[0].date) result.x.property = 'date';else if (data[0].time) result.x.property = 'time';\n        }\n      }\n\n      if (!result.x.granularity) result.x.granularity = 'coarse';\n    }\n\n    if (result.y) {\n      if (!result.y.property && charts[0]) // see if we have a point chart that has an x property\n        result.y.property = charts[0].property.y || charts[0].property;\n      if (!result.y.granularity) result.y.granularity = 'coarse';\n    } // calculate number of entries based on granularity\n\n\n    if (result.x) {\n      var _result$x$granularity = result.x.granularity,\n          granularity = _result$x$granularity === void 0 ? 'coarse' : _result$x$granularity;\n      result.x.count = granularities.x[granularity];\n    }\n\n    if (result.y) {\n      var _result$y$granularity = result.y.granularity,\n          _granularity = _result$y$granularity === void 0 ? 'coarse' : _result$y$granularity;\n\n      result.y.count = granularities.y[_granularity];\n    }\n\n    return result;\n  }, [axisProp, data, charts, granularities]); // calculate axis, bounds, and thickness for each chart\n\n  var chartProps = useMemo(function () {\n    var steps = [];\n    var coarseness = [undefined, 5];\n\n    if (axis && axis.x) {\n      var _axis$x$granularity = axis.x.granularity,\n          granularity = _axis$x$granularity === void 0 ? 'coarse' : _axis$x$granularity;\n      steps[0] = granularities.x[granularity] - 1;\n    } else steps[0] = data.length - 1;\n\n    if (axis && axis.y) {\n      var _axis$y$granularity = axis.y.granularity,\n          _granularity2 = _axis$y$granularity === void 0 ? 'coarse' : _axis$y$granularity;\n\n      steps[1] = granularities.y[_granularity2] - 1;\n    } else steps[1] = 1;\n\n    var chartBounds = chartValues.map(function (_, index) {\n      if (charts[index].type === 'bars') {\n        // merge values for bars case\n        var mergedValues = chartValues[index][0].slice(0);\n        chartValues[index].slice(1).filter(function (values) {\n          return values;\n        }) // property name isn't valid\n        .forEach(function (values) {\n          mergedValues = mergedValues.map(function (__, i) {\n            return [i, Math.min(mergedValues[i][1], values[i][1]), Math.max(mergedValues[i][2], values[i][2])];\n          });\n        });\n        return calcBounds(mergedValues, {\n          coarseness: coarseness,\n          steps: steps\n        });\n      } // if this is a data driven x chart, set coarseness for x\n\n\n      return calcBounds(chartValues[index], {\n        coarseness: charts[index].property.x ? [5, 5] : coarseness,\n        steps: steps\n      });\n    });\n\n    if (boundsProp === 'align' && chartBounds.length) {\n      var alignedBounds = [].concat(chartBounds[0]);\n      chartBounds.forEach(function (bounds) {\n        alignedBounds[0][0] = Math.min(alignedBounds[0][0], bounds[0][0]);\n        alignedBounds[0][1] = Math.max(alignedBounds[0][1], bounds[0][1]);\n        alignedBounds[1][0] = Math.min(alignedBounds[1][0], bounds[1][0]);\n        alignedBounds[1][1] = Math.max(alignedBounds[1][1], bounds[1][1]);\n      });\n      chartBounds = chartBounds.map(function () {\n        return alignedBounds;\n      });\n    }\n\n    return chartValues.map(function (values, index) {\n      var calcValues = charts[index].type === 'bars' ? values[0] : values;\n      return calcs(calcValues, {\n        bounds: chartBounds[index],\n        steps: steps\n      });\n    });\n  }, [axis, boundsProp, charts, chartValues, data, granularities]); // normalize how we style data properties for use by Legend and Detail\n\n  var seriesStyles = useMemo(function () {\n    var result = {}; // start from what we were explicitly given\n\n    charts.forEach(function (_ref6, index) {\n      var color = _ref6.color,\n          point = _ref6.point,\n          property = _ref6.property,\n          thickness = _ref6.thickness,\n          type = _ref6.type;\n      var calcThickness = chartProps[index].thickness;\n\n      if (typeof property === 'object' && !Array.isArray(property)) {\n        // data driven point chart\n        Object.keys(property).forEach(function (aspect) {\n          var prop = property[aspect];\n          if (!result[prop.property || prop]) result[prop.property || prop] = {\n            aspect: aspect\n          };\n        });\n      } else {\n        var props = Array.isArray(property) ? property : [property];\n        props.forEach(function (prop) {\n          var p = prop.property || prop;\n          var pColor = prop.color || color;\n          if (!result[p]) result[p] = {};\n          if (pColor && !result[p].color) result[p].color = pColor;\n          if (point && !result[p].point) result[p].point = point;else if (type === 'point') result[p].point = false;\n          if ((thickness || calcThickness) && !result[p].thickness) result[p].thickness = thickness || calcThickness;\n        });\n      }\n    }); // set color for any non-aspect properties we don't have one for yet\n\n    var colorIndex = 0;\n    var pointIndex = 0;\n    Object.keys(result).forEach(function (key) {\n      var seriesStyle = result[key];\n\n      if (!seriesStyle.aspect && !seriesStyle.color) {\n        seriesStyle.color = \"graph-\" + colorIndex;\n        colorIndex += 1;\n      } // set opacity if it isn't set and this isn't the active property\n\n\n      if (activeProperty !== undefined && activeProperty !== key) {\n        seriesStyle.opacity = 'medium';\n      }\n\n      if (seriesStyle.point === false) {\n        seriesStyle.point = points[pointIndex];\n        pointIndex += 1;\n      }\n    });\n    return result;\n  }, [activeProperty, charts, chartProps]); // normalize guide\n\n  var guide = useMemo(function () {\n    if (!guideProp) return undefined;\n    var result;\n\n    if (guideProp === true) {\n      result = {\n        x: {},\n        y: {}\n      };\n    } else {\n      result = {};\n      if (guideProp.x) result.x = _extends({}, guideProp.x);\n      if (guideProp.y) result.y = _extends({}, guideProp.y);\n    } // set counts\n\n\n    if (result.x) {\n      // if no granularity and axis, align count with axis\n      if (!result.x.granularity && axis && axis.x) result.x.count = axis.x.count;\n      if (!result.x.count) result.x.count = granularities.x[result.x.granularity || 'coarse'];\n    }\n\n    if (result.y) {\n      // if no granularity and axis, align count with axis\n      if (!result.y.granularity && axis && axis.y) result.y.count = axis.y.count;\n      if (!result.y.count) result.y.count = granularities.y[result.y.granularity || 'coarse'];\n    }\n\n    return result;\n  }, [axis, granularities, guideProp]); // set the pad to half the thickness, based on the chart types\n\n  var pad = useMemo(function () {\n    if (padProp !== undefined) return padProp;\n    var result = {};\n    charts.forEach(function (_ref7, index) {\n      var type = _ref7.type;\n      var thickness = chartProps[index].thickness;\n      result.horizontal = halfPad[thickness];\n      if (type && type !== 'bar') result.vertical = halfPad[thickness];\n    });\n    return result;\n  }, [chartProps, charts, padProp]);\n  var dateFormats = useMemo(function () {\n    var result = {};\n    var full = axis && axis.x && axis.x.granularity === 'coarse';\n    series.forEach(function (_ref8) {\n      var property = _ref8.property,\n          render = _ref8.render;\n\n      if (!render && data.length > 1 && typeof data[0][property] === 'string') {\n        result[property] = createDateFormat(data[0][property], data[data.length - 1][property], full);\n      }\n    });\n    return result;\n  }, [axis, data, series]); // for ie11, align the spacer Box height to the x-axis height\n\n  useLayoutEffect(function () {\n    if (xRef.current && spacerRef.current) {\n      var rect = xRef.current.getBoundingClientRect();\n      spacerRef.current.style.height = rect.height + \"px\";\n    }\n  }, []);\n\n  var renderValue = function renderValue(serie, dataIndex, valueArg) {\n    var value;\n\n    if (valueArg !== undefined) {\n      if (serie && serie.render) return serie.render(valueArg);\n      value = valueArg;\n    } else {\n      var datum = data[dataIndex];\n      value = datum[serie.property];\n      if (serie && serie.render) return serie.render(value, datum, serie.property);\n    }\n\n    if (serie) {\n      var dateFormat = dateFormats[serie.property];\n      if (dateFormat) return dateFormat(new Date(value));\n      if (serie.prefix) value = \"\" + serie.prefix + value;\n      if (serie.suffix) value = \"\" + value + serie.suffix;\n    }\n\n    return value;\n  }; // TODO: revisit how x/y axis are hooked up to charts and series\n\n\n  var xAxisElement = axis && axis.x && chartProps.length ? /*#__PURE__*/React.createElement(XAxis, {\n    ref: xRef,\n    axis: axis,\n    chartProps: chartProps,\n    data: data,\n    renderValue: renderValue,\n    serie: axis.x.property && getPropertySeries(axis.x.property)\n  }) : null;\n  var yAxisElement = axis && axis.y && chartProps.length ? /*#__PURE__*/React.createElement(YAxis, {\n    axis: axis,\n    chartProps: chartProps,\n    pad: pad,\n    renderValue: renderValue,\n    serie: axis.y.property && getPropertySeries(axis.y.property)\n  }) : null;\n  var stackFill = useMemo(function () {\n    if (size === 'fill' || size && size.width === 'fill' && size.height === 'fill') return true;\n    if (size && size.width === 'fill') return 'horizontal';\n    if (size && size.height === 'fill') return 'vertical';\n    return undefined;\n  }, [size]);\n  var guidingChild = useMemo(function () {\n    var result = 0;\n    if (guide && guide.x) result += 1;\n    if (guide && guide.y) result += 1;\n    return result;\n  }, [guide]);\n  var stackElement = /*#__PURE__*/React.createElement(Stack, {\n    gridArea: \"charts\",\n    guidingChild: guidingChild,\n    fill: stackFill\n  }, guide && guide.x && /*#__PURE__*/React.createElement(XGuide, {\n    guide: guide,\n    pad: pad\n  }), guide && guide.y && /*#__PURE__*/React.createElement(YGuide, {\n    guide: guide,\n    pad: pad\n  }), charts.map(function (_ref9, i) {\n    var prop = _ref9.property,\n        type = _ref9.type,\n        x = _ref9.x,\n        y = _ref9.y,\n        chartRest = _objectWithoutPropertiesLoose(_ref9, [\"property\", \"type\", \"x\", \"y\"]);\n\n    if (type === 'bars') {\n      // reverse to ensure area Charts are stacked in the right order\n      return prop.map(function (cProp, j) {\n        var pProp = cProp.property || cProp;\n        return /*#__PURE__*/React.createElement(Chart // eslint-disable-next-line react/no-array-index-key\n        , _extends({\n          key: j // when property name isn't valid, send empty array\n          ,\n          values: chartValues[i][j] || [],\n          overflow: true\n        }, seriesStyles[pProp], chartProps[i], chartRest, {\n          type: \"bar\",\n          size: size,\n          pad: pad\n        }));\n      }).reverse();\n    }\n\n    return /*#__PURE__*/React.createElement(Chart // eslint-disable-next-line react/no-array-index-key\n    , _extends({\n      key: i,\n      values: chartValues[i],\n      overflow: true\n    }, seriesStyles[prop], chartProps[i], chartRest, {\n      type: type,\n      size: size,\n      pad: pad\n    }));\n  }), detail && /*#__PURE__*/React.createElement(Detail, {\n    activeProperty: activeProperty,\n    axis: axis,\n    data: data,\n    series: series,\n    seriesStyles: seriesStyles,\n    renderValue: renderValue,\n    pad: pad\n  }));\n  var legendElement = legend ? /*#__PURE__*/React.createElement(Legend, {\n    series: series,\n    seriesStyles: seriesStyles,\n    activeProperty: activeProperty,\n    setActiveProperty: setActiveProperty\n  }) : null; // IE11\n\n  if (!Grid.available) {\n    var _content = stackElement;\n\n    if (xAxisElement) {\n      _content = /*#__PURE__*/React.createElement(Box, null, _content, xAxisElement);\n    }\n\n    if (yAxisElement) {\n      _content = /*#__PURE__*/React.createElement(Box, {\n        direction: \"row\"\n      }, /*#__PURE__*/React.createElement(Box, null, yAxisElement, /*#__PURE__*/React.createElement(Box, {\n        ref: spacerRef,\n        flex: false\n      })), _content);\n    }\n\n    if (legendElement) {\n      _content = /*#__PURE__*/React.createElement(Box, null, _content, legendElement);\n    }\n\n    return _content;\n  }\n\n  var content = /*#__PURE__*/React.createElement(Grid, _extends({\n    ref: ref,\n    \"aria-label\": a11yTitle,\n    fill: stackFill,\n    columns: ['auto', stackFill === true || stackFill === 'horizontal' ? 'flex' : 'auto'],\n    rows: [stackFill === true || stackFill === 'vertical' ? 'flex' : 'auto', 'auto'],\n    areas: [{\n      name: 'yAxis',\n      start: [0, 0],\n      end: [0, 0]\n    }, {\n      name: 'xAxis',\n      start: [1, 1],\n      end: [1, 1]\n    }, {\n      name: 'charts',\n      start: [1, 0],\n      end: [1, 0]\n    }],\n    gap: gap\n  }, rest), xAxisElement, yAxisElement, stackElement);\n\n  if (legendElement) {\n    content = /*#__PURE__*/React.createElement(Box, {\n      align: \"start\"\n    }, content, legendElement);\n  }\n\n  return content;\n});\nDataChart.displayName = 'DataChart';\nvar DataChartDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line global-require\n  DataChartDoc = require('./doc').doc(DataChart);\n}\n\nvar DataChartWrapper = DataChartDoc || DataChart;\nexport { DataChartWrapper as DataChart };"]},"metadata":{},"sourceType":"module"}