{"ast":null,"code":"import _objectSpread from \"C:/Users/antaresofficial/Desktop/tree/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"C:/Users/antaresofficial/Desktop/tree/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"id\", \"depth\"];\n\nvar _jsxFileName = \"C:\\\\Users\\\\antaresofficial\\\\Desktop\\\\tree\\\\src\\\\components\\\\TreeItem\\\\SortableTreeItem.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSortable } from \"@dnd-kit/sortable\";\nimport { CSS } from \"@dnd-kit/utilities\";\nimport { TreeItem } from \"./TreeItem\";\nimport { iOS } from \"../utilities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar animateLayoutChanges = function animateLayoutChanges(_ref) {\n  var isSorting = _ref.isSorting,\n      wasSorting = _ref.wasSorting;\n  return isSorting || wasSorting ? false : true;\n};\n\nexport function SortableTreeItem(_ref2) {\n  _s();\n\n  var id = _ref2.id,\n      depth = _ref2.depth,\n      props = _objectWithoutProperties(_ref2, _excluded);\n\n  var _useSortable = useSortable({\n    id: id,\n    animateLayoutChanges: animateLayoutChanges\n  }),\n      attributes = _useSortable.attributes,\n      isDragging = _useSortable.isDragging,\n      isSorting = _useSortable.isSorting,\n      listeners = _useSortable.listeners,\n      setDraggableNodeRef = _useSortable.setDraggableNodeRef,\n      setDroppableNodeRef = _useSortable.setDroppableNodeRef,\n      transform = _useSortable.transform,\n      transition = _useSortable.transition;\n\n  var style = {\n    transform: CSS.Translate.toString(transform),\n    transition: transition\n  };\n  return /*#__PURE__*/_jsxDEV(TreeItem, _objectSpread({\n    ref: setDraggableNodeRef,\n    wrapperRef: setDroppableNodeRef,\n    style: style,\n    depth: depth,\n    ghost: isDragging,\n    disableSelection: iOS,\n    disableInteraction: isSorting,\n    handleProps: _objectSpread(_objectSpread({}, attributes), listeners)\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SortableTreeItem, \"aa4HqM0J8CTp7Tuy7O5u0qwhwWY=\", false, function () {\n  return [useSortable];\n});\n\n_c = SortableTreeItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortableTreeItem\");","map":{"version":3,"sources":["C:/Users/antaresofficial/Desktop/tree/src/components/TreeItem/SortableTreeItem.tsx"],"names":["React","useSortable","CSS","TreeItem","iOS","animateLayoutChanges","isSorting","wasSorting","SortableTreeItem","id","depth","props","attributes","isDragging","listeners","setDraggableNodeRef","setDroppableNodeRef","transform","transition","style","Translate","toString"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAqC,OAArC;AACA,SAA+BC,WAA/B,QAAkD,mBAAlD;AACA,SAASC,GAAT,QAAoB,oBAApB;AAEA,SAASC,QAAT,QAAiD,YAAjD;AACA,SAASC,GAAT,QAAoB,cAApB;;;AAMA,IAAMC,oBAA0C,GAAG,SAA7CA,oBAA6C;AAAA,MACjDC,SADiD,QACjDA,SADiD;AAAA,MAEjDC,UAFiD,QAEjDA,UAFiD;AAAA,SAG5CD,SAAS,IAAIC,UAAb,GAA0B,KAA1B,GAAkC,IAHU;AAAA,CAAnD;;AAKA,OAAO,SAASC,gBAAT,QAAwD;AAAA;;AAAA,MAA5BC,EAA4B,SAA5BA,EAA4B;AAAA,MAAxBC,KAAwB,SAAxBA,KAAwB;AAAA,MAAdC,KAAc;;AAC7D,qBASIV,WAAW,CAAC;AACdQ,IAAAA,EAAE,EAAFA,EADc;AAEdJ,IAAAA,oBAAoB,EAApBA;AAFc,GAAD,CATf;AAAA,MACEO,UADF,gBACEA,UADF;AAAA,MAEEC,UAFF,gBAEEA,UAFF;AAAA,MAGEP,SAHF,gBAGEA,SAHF;AAAA,MAIEQ,SAJF,gBAIEA,SAJF;AAAA,MAKEC,mBALF,gBAKEA,mBALF;AAAA,MAMEC,mBANF,gBAMEA,mBANF;AAAA,MAOEC,SAPF,gBAOEA,SAPF;AAAA,MAQEC,UARF,gBAQEA,UARF;;AAaA,MAAMC,KAAoB,GAAG;AAC3BF,IAAAA,SAAS,EAAEf,GAAG,CAACkB,SAAJ,CAAcC,QAAd,CAAuBJ,SAAvB,CADgB;AAE3BC,IAAAA,UAAU,EAAVA;AAF2B,GAA7B;AAKA,sBACE,QAAC,QAAD;AACE,IAAA,GAAG,EAAEH,mBADP;AAEE,IAAA,UAAU,EAAEC,mBAFd;AAGE,IAAA,KAAK,EAAEG,KAHT;AAIE,IAAA,KAAK,EAAET,KAJT;AAKE,IAAA,KAAK,EAAEG,UALT;AAME,IAAA,gBAAgB,EAAET,GANpB;AAOE,IAAA,kBAAkB,EAAEE,SAPtB;AAQE,IAAA,WAAW,kCACNM,UADM,GAENE,SAFM;AARb,KAYMH,KAZN;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAnCeH,gB;UAUVP,W;;;KAVUO,gB","sourcesContent":["import React, { CSSProperties } from \"react\";\r\nimport { AnimateLayoutChanges, useSortable } from \"@dnd-kit/sortable\";\r\nimport { CSS } from \"@dnd-kit/utilities\";\r\n\r\nimport { TreeItem, Props as TreeItemProps } from \"./TreeItem\";\r\nimport { iOS } from \"../utilities\";\r\n\r\ninterface Props extends TreeItemProps {\r\n  id: string;\r\n}\r\n\r\nconst animateLayoutChanges: AnimateLayoutChanges = ({\r\n  isSorting,\r\n  wasSorting,\r\n}) => (isSorting || wasSorting ? false : true);\r\n\r\nexport function SortableTreeItem({ id, depth, ...props }: any) {\r\n  const {\r\n    attributes,\r\n    isDragging,\r\n    isSorting,\r\n    listeners,\r\n    setDraggableNodeRef,\r\n    setDroppableNodeRef,\r\n    transform,\r\n    transition,\r\n  } = useSortable({\r\n    id,\r\n    animateLayoutChanges,\r\n  });\r\n  const style: CSSProperties = {\r\n    transform: CSS.Translate.toString(transform),\r\n    transition,\r\n  };\r\n\r\n  return (\r\n    <TreeItem\r\n      ref={setDraggableNodeRef}\r\n      wrapperRef={setDroppableNodeRef}\r\n      style={style}\r\n      depth={depth}\r\n      ghost={isDragging}\r\n      disableSelection={iOS}\r\n      disableInteraction={isSorting}\r\n      handleProps={{\r\n        ...attributes,\r\n        ...listeners,\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}