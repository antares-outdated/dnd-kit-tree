{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef, useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { CheckBox } from '../CheckBox';\nimport { FormContext } from '../Form/FormContext';\nimport { StyledCheckBoxGroup } from './StyledCheckBoxGroup';\nexport var CheckBoxGroup = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var valueProp = _ref.value,\n      disabledProp = _ref.disabled,\n      gap = _ref.gap,\n      labelKey = _ref.labelKey,\n      valueKey = _ref.valueKey,\n      onChange = _ref.onChange,\n      optionsProp = _ref.options,\n      name = _ref.name,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"value\", \"disabled\", \"gap\", \"labelKey\", \"valueKey\", \"onChange\", \"options\", \"name\"]);\n\n  var formContext = useContext(FormContext);\n  var theme = useContext(ThemeContext) || defaultProps.theme; // In case option is a string, normalize it to be an object\n\n  var options = optionsProp.map(function (option) {\n    return typeof option === 'string' ? {\n      disabled: disabledProp,\n      value: option,\n      label: option\n    } : option;\n  }); // 'value' is an array of checked valueKeys\n\n  var _formContext$useFormI = formContext.useFormInput(name, valueProp, []),\n      value = _formContext$useFormI[0],\n      setValue = _formContext$useFormI[1]; // Logic is necessary to maintain a proper data structure for Form logic\n\n\n  var onCheckBoxChange = function onCheckBoxChange(event, optionValue, option) {\n    // deep copy of value\n    var nextValue = JSON.parse(JSON.stringify(value)) || [];\n    var optionIndex = nextValue.indexOf(optionValue); // If the value option isn't in the array, add it.\n    // Otherwise, remove it.\n\n    if (optionIndex < 0) nextValue.push(optionValue);else nextValue.splice(optionIndex, 1);\n    setValue(nextValue); // Similar functionality to Select onChange()\n\n    if (onChange) {\n      event.persist(); // extract from React synthetic event pool\n\n      var adjustedEvent = event;\n      adjustedEvent.value = nextValue;\n      adjustedEvent.option = option;\n      onChange(adjustedEvent);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(StyledCheckBoxGroup, _extends({\n    ref: ref\n  }, theme.checkBoxGroup.container, {\n    gap: gap || (theme.checkBoxGroup.container && theme.checkBoxGroup.container.gap ? theme.checkBoxGroup.container.gap : 'small') // consistent with RadioButtonGroup default\n\n  }, rest), options.map(function (option) {\n    var optionValue = option.value;\n    var label = labelKey ? option[labelKey] : option.label;\n    var valueOption = valueKey ? option[valueKey] : optionValue;\n    var checked = value.indexOf(valueOption) >= 0;\n    var disabled = disabledProp || option.disabled;\n    var key = label + \"-\" + valueOption;\n    if (option.checked) console.warn( // eslint-disable-next-line max-len\n    \"'checked' prop of an individual CheckBox shouldn't be used in a CheckBoxGroup component. Use the CheckBoxGroup 'value' prop instead.\"); // value shouldn't propagate the input field and the onChange option\n\n    var omit = option.value,\n        optionRest = _objectWithoutPropertiesLoose(option, [\"value\"]);\n\n    var optionProps = _extends({}, optionRest, {\n      label: label,\n      disabled: disabled\n    });\n\n    return /*#__PURE__*/React.createElement(CheckBox, _extends({\n      key: key\n    }, optionProps, {\n      disabled: disabled,\n      checked: checked,\n      label: label,\n      onChange: function onChange(event) {\n        return onCheckBoxChange(event, valueOption, optionProps);\n      }\n    }));\n  }));\n});\nCheckBoxGroup.displayName = 'CheckBoxGroup';\nvar CheckBoxGroupDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line global-require\n  CheckBoxGroupDoc = require('./doc').doc(CheckBoxGroup);\n}\n\nvar RadioButtonGroupWrapper = CheckBoxGroupDoc || CheckBoxGroup;\nexport { RadioButtonGroupWrapper as RadioButtonGroup };","map":{"version":3,"sources":["C:/Users/antaresofficial/Desktop/tree/node_modules/grommet/es6/components/CheckBoxGroup/CheckBoxGroup.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","forwardRef","useContext","ThemeContext","CheckBox","FormContext","StyledCheckBoxGroup","CheckBoxGroup","_ref","ref","valueProp","value","disabledProp","disabled","gap","labelKey","valueKey","onChange","optionsProp","options","name","rest","formContext","theme","defaultProps","map","option","label","_formContext$useFormI","useFormInput","setValue","onCheckBoxChange","event","optionValue","nextValue","JSON","parse","stringify","optionIndex","push","splice","persist","adjustedEvent","createElement","checkBoxGroup","container","valueOption","checked","console","warn","omit","optionRest","optionProps","displayName","CheckBoxGroupDoc","process","env","NODE_ENV","require","doc","RadioButtonGroupWrapper","RadioButtonGroup"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef, useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { CheckBox } from '../CheckBox';\nimport { FormContext } from '../Form/FormContext';\nimport { StyledCheckBoxGroup } from './StyledCheckBoxGroup';\nexport var CheckBoxGroup = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var valueProp = _ref.value,\n      disabledProp = _ref.disabled,\n      gap = _ref.gap,\n      labelKey = _ref.labelKey,\n      valueKey = _ref.valueKey,\n      onChange = _ref.onChange,\n      optionsProp = _ref.options,\n      name = _ref.name,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"value\", \"disabled\", \"gap\", \"labelKey\", \"valueKey\", \"onChange\", \"options\", \"name\"]);\n\n  var formContext = useContext(FormContext);\n  var theme = useContext(ThemeContext) || defaultProps.theme; // In case option is a string, normalize it to be an object\n\n  var options = optionsProp.map(function (option) {\n    return typeof option === 'string' ? {\n      disabled: disabledProp,\n      value: option,\n      label: option\n    } : option;\n  }); // 'value' is an array of checked valueKeys\n\n  var _formContext$useFormI = formContext.useFormInput(name, valueProp, []),\n      value = _formContext$useFormI[0],\n      setValue = _formContext$useFormI[1]; // Logic is necessary to maintain a proper data structure for Form logic\n\n\n  var onCheckBoxChange = function onCheckBoxChange(event, optionValue, option) {\n    // deep copy of value\n    var nextValue = JSON.parse(JSON.stringify(value)) || [];\n    var optionIndex = nextValue.indexOf(optionValue); // If the value option isn't in the array, add it.\n    // Otherwise, remove it.\n\n    if (optionIndex < 0) nextValue.push(optionValue);else nextValue.splice(optionIndex, 1);\n    setValue(nextValue); // Similar functionality to Select onChange()\n\n    if (onChange) {\n      event.persist(); // extract from React synthetic event pool\n\n      var adjustedEvent = event;\n      adjustedEvent.value = nextValue;\n      adjustedEvent.option = option;\n      onChange(adjustedEvent);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(StyledCheckBoxGroup, _extends({\n    ref: ref\n  }, theme.checkBoxGroup.container, {\n    gap: gap || (theme.checkBoxGroup.container && theme.checkBoxGroup.container.gap ? theme.checkBoxGroup.container.gap : 'small') // consistent with RadioButtonGroup default\n\n  }, rest), options.map(function (option) {\n    var optionValue = option.value;\n    var label = labelKey ? option[labelKey] : option.label;\n    var valueOption = valueKey ? option[valueKey] : optionValue;\n    var checked = value.indexOf(valueOption) >= 0;\n    var disabled = disabledProp || option.disabled;\n    var key = label + \"-\" + valueOption;\n    if (option.checked) console.warn( // eslint-disable-next-line max-len\n    \"'checked' prop of an individual CheckBox shouldn't be used in a CheckBoxGroup component. Use the CheckBoxGroup 'value' prop instead.\"); // value shouldn't propagate the input field and the onChange option\n\n    var omit = option.value,\n        optionRest = _objectWithoutPropertiesLoose(option, [\"value\"]);\n\n    var optionProps = _extends({}, optionRest, {\n      label: label,\n      disabled: disabled\n    });\n\n    return /*#__PURE__*/React.createElement(CheckBox, _extends({\n      key: key\n    }, optionProps, {\n      disabled: disabled,\n      checked: checked,\n      label: label,\n      onChange: function onChange(event) {\n        return onCheckBoxChange(event, valueOption, optionProps);\n      }\n    }));\n  }));\n});\nCheckBoxGroup.displayName = 'CheckBoxGroup';\nvar CheckBoxGroupDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line global-require\n  CheckBoxGroupDoc = require('./doc').doc(CheckBoxGroup);\n}\n\nvar RadioButtonGroupWrapper = CheckBoxGroupDoc || CheckBoxGroup;\nexport { RadioButtonGroupWrapper as RadioButtonGroup };"]},"metadata":{},"sourceType":"module"}