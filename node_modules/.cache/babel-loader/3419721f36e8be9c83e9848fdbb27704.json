{"ast":null,"code":"export var normalizeValues = function normalizeValues(values) {\n  return (values || []).map(function (value, index) {\n    if (value === undefined) return {\n      value: [index, undefined]\n    };\n    if (typeof value === 'number') return {\n      value: [index, value]\n    };\n    if (Array.isArray(value)) return {\n      value: value\n    };\n    return value;\n  });\n};\nexport var normalizeBounds = function normalizeBounds(bounds, values) {\n  var result = bounds;\n\n  if (!result) {\n    result = [[0, 1], [0, 1]];\n    (values || []).forEach(function (value) {\n      if (value.value[0] !== undefined) {\n        result[0][0] = Math.min(result[0][0], value.value[0]);\n        result[0][1] = Math.max(result[0][1], value.value[0]);\n      }\n\n      if (value.value[1] !== undefined) {\n        result[1][0] = Math.min(result[1][0], value.value[1]);\n        result[1][1] = Math.max(result[1][1], value.value[1]);\n      }\n\n      if (value.value[2] !== undefined) {\n        result[1][0] = Math.min(result[1][0], value.value[2]);\n        result[1][1] = Math.max(result[1][1], value.value[2]);\n      }\n    });\n  }\n\n  return result;\n};\nexport var areNormalizedValuesEquals = function areNormalizedValuesEquals(valuesX, valuesY) {\n  console.warn(\"This function will be removed in the upcoming releases.\\nPlease get in touch with us if you have concerns.\");\n  if (!valuesX || !valuesY) return false;\n  if (valuesX.length !== valuesY.length) return false;\n  if (valuesX.length === 0) return true;\n  if (!valuesX[0].value || !valuesY[0].value) return false;\n  return valuesX.every(function (_, i) {\n    return valuesX[i].value.every(function (value, index) {\n      return value === valuesY[i].value[index];\n    });\n  });\n};\nexport var areNormalizedBoundsEquals = function areNormalizedBoundsEquals(boundsX, boundsY) {\n  console.warn(\"This function will be removed in the upcoming releases.\\nPlease get in touch with us if you have concerns.\");\n  if (!boundsX || !boundsY) return false;\n  if (boundsX.length !== boundsY.length || !(boundsX.length > 0)) return false;\n  return boundsX.every(function (_, i) {\n    return boundsX[i].every(function (value, index) {\n      return value === boundsY[i][index];\n    });\n  });\n};","map":{"version":3,"sources":["C:/Users/antaresofficial/Desktop/tree/node_modules/grommet/es6/components/Chart/utils.js"],"names":["normalizeValues","values","map","value","index","undefined","Array","isArray","normalizeBounds","bounds","result","forEach","Math","min","max","areNormalizedValuesEquals","valuesX","valuesY","console","warn","length","every","_","i","areNormalizedBoundsEquals","boundsX","boundsY"],"mappings":"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","sourcesContent":["export var normalizeValues = function normalizeValues(values) {\n  return (values || []).map(function (value, index) {\n    if (value === undefined) return {\n      value: [index, undefined]\n    };\n    if (typeof value === 'number') return {\n      value: [index, value]\n    };\n    if (Array.isArray(value)) return {\n      value: value\n    };\n    return value;\n  });\n};\nexport var normalizeBounds = function normalizeBounds(bounds, values) {\n  var result = bounds;\n\n  if (!result) {\n    result = [[0, 1], [0, 1]];\n    (values || []).forEach(function (value) {\n      if (value.value[0] !== undefined) {\n        result[0][0] = Math.min(result[0][0], value.value[0]);\n        result[0][1] = Math.max(result[0][1], value.value[0]);\n      }\n\n      if (value.value[1] !== undefined) {\n        result[1][0] = Math.min(result[1][0], value.value[1]);\n        result[1][1] = Math.max(result[1][1], value.value[1]);\n      }\n\n      if (value.value[2] !== undefined) {\n        result[1][0] = Math.min(result[1][0], value.value[2]);\n        result[1][1] = Math.max(result[1][1], value.value[2]);\n      }\n    });\n  }\n\n  return result;\n};\nexport var areNormalizedValuesEquals = function areNormalizedValuesEquals(valuesX, valuesY) {\n  console.warn(\"This function will be removed in the upcoming releases.\\nPlease get in touch with us if you have concerns.\");\n  if (!valuesX || !valuesY) return false;\n  if (valuesX.length !== valuesY.length) return false;\n  if (valuesX.length === 0) return true;\n  if (!valuesX[0].value || !valuesY[0].value) return false;\n  return valuesX.every(function (_, i) {\n    return valuesX[i].value.every(function (value, index) {\n      return value === valuesY[i].value[index];\n    });\n  });\n};\nexport var areNormalizedBoundsEquals = function areNormalizedBoundsEquals(boundsX, boundsY) {\n  console.warn(\"This function will be removed in the upcoming releases.\\nPlease get in touch with us if you have concerns.\");\n  if (!boundsX || !boundsY) return false;\n  if (boundsX.length !== boundsY.length || !(boundsX.length > 0)) return false;\n  return boundsX.every(function (_, i) {\n    return boundsX[i].every(function (value, index) {\n      return value === boundsY[i][index];\n    });\n  });\n};"]},"metadata":{},"sourceType":"module"}