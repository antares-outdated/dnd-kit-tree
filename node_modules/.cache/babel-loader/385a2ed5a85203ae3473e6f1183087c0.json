{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { describe, PropTypes } from 'react-desc';\nimport { genericProps } from '../../utils/prop-types';\nimport { getAvailableAtBadge } from '../../utils/mixins';\nexport var doc = function doc(Clock) {\n  var DocumentedClock = describe(Clock).availableAt(getAvailableAtBadge('Clock', 'Visualization')).description('A clock with timezone awareness.').usage(\"import { Clock } from 'grommet';\\n<Clock />\").intrinsicElement(['div', 'svg']);\n  DocumentedClock.propTypes = _extends({}, genericProps, {\n    hourLimit: PropTypes.oneOf([12, 24, '12', '24']).description('Whether to roll over the hours after 12 or after 24.').defaultValue(24),\n    onChange: PropTypes.func.description(\"If the clock is running, this function will be called with the\\n      current time value each time it changes.\"),\n    precision: PropTypes.oneOf(['hours', 'minutes', 'seconds']).description('How precise a time to represent.').defaultValue('seconds'),\n    run: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['backward', 'forward'])]).description(\"Whether the clock should actively adjust time or be fixed to the\\n      time specified. 'backward' could be used as a countdown timer.\").defaultValue('forward'),\n    size: PropTypes.oneOfType([PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge', 'xxlarge']), PropTypes.string]).description(\"Size for both Analog and Digital Clocks. For Analog,\\n      there's also 'huge', that's equal to 'xxlarge' and exists\\n      for backwards compatibility\").defaultValue('medium'),\n    time: PropTypes.string.description(\"ISO8601 time or duration. For example: 'PT8H12M23S',\\n      'T08:12:23', or '2015-02-22T08:12:23'. Any included date\\n      portion will be ignored. If not provided, the\\n      current browser time will be used.\"),\n    type: PropTypes.oneOf(['analog', 'digital']).description('What type of visualization to show.').defaultValue('analog')\n  });\n  return DocumentedClock;\n};\nexport var themeDoc = {\n  'clock.analog.extend': {\n    description: 'Any additional style for the Analog Clock.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  },\n  'clock.analog.hour.color': {\n    description: 'The color of the hour hand.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: '{ dark: light-2, light: dark-3 }'\n  },\n  'clock.analog.hour.shape': {\n    description: 'The shape of the hour hand',\n    type: 'string',\n    defaultValue: 'round'\n  },\n  'clock.analog.hour.size': {\n    description: 'The length of the hour hand.',\n    type: 'string',\n    defaultValue: '24px'\n  },\n  'clock.analog.hour.width': {\n    description: 'The thickness of the hour hand',\n    type: 'string',\n    defaultValue: '8px'\n  },\n  'clock.analog.minute.color': {\n    description: 'The color of the minute hand.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: '{ dark: light-4, light: dark-3 }'\n  },\n  'clock.analog.minute.shape': {\n    description: 'The shape of the minute hand.',\n    type: 'string',\n    defaultValue: 'round'\n  },\n  'clock.analog.minute.size': {\n    description: 'The length of the minute hand.',\n    type: 'string',\n    defaultValue: '12px'\n  },\n  'clock.analog.minute.width': {\n    description: 'The thickness of the minute hand.',\n    type: 'string',\n    defaultValue: '4px'\n  },\n  'clock.analog.second.color': {\n    description: 'The color of the seconds hand',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: '{ dark: accent-1, light: accent-1 }'\n  },\n  'clock.analog.second.shape': {\n    description: 'The shape of the seconds hand.',\n    type: 'string',\n    defaultValue: 'round'\n  },\n  'clock.analog.second.size': {\n    description: 'The length of the seconds hand.',\n    type: 'string',\n    defaultValue: '10px'\n  },\n  'clock.analog.second.width': {\n    description: 'The thickness of the seconds hand.',\n    type: 'string',\n    defaultValue: '3px'\n  },\n  'clock.analog.size.xsmall': {\n    description: 'The whole size of the Analog Clock',\n    type: 'string',\n    defaultValue: '48px'\n  },\n  'clock.analog.size.small': {\n    description: 'The whole size of the Analog Clock',\n    type: 'string',\n    defaultValue: '72px'\n  },\n  'clock.analog.size.medium': {\n    description: 'The whole size of the Analog Clock',\n    type: 'string',\n    defaultValue: '96px'\n  },\n  'clock.analog.size.large': {\n    description: 'The whole size of the Analog Clock',\n    type: 'string',\n    defaultValue: '144px'\n  },\n  'clock.analog.size.xlarge': {\n    description: 'The whole size of the Analog Clock',\n    type: 'string',\n    defaultValue: '216px'\n  },\n  'clock.analog.size.xxlarge': {\n    description: 'The whole size of the Analog Clock',\n    type: 'string',\n    defaultValue: '288px'\n  },\n  'clock.analog.size.huge': {\n    description: 'The whole size of the Analog Clock',\n    type: 'string',\n    defaultValue: '288px'\n  },\n  'clock.digital.text.xsmall.size': {\n    description: 'Defines the font size of the Digital Clock',\n    type: 'string',\n    defaultValue: '10px'\n  },\n  'clock.digital.text.xsmall.height': {\n    description: 'Defines the line height of the Digital Clock',\n    type: 'number',\n    defaultValue: '1.5'\n  },\n  'clock.digital.text.small.size': {\n    description: 'Defines the font size of the Digital Clock',\n    type: 'string',\n    defaultValue: '14px'\n  },\n  'clock.digital.text.small.height': {\n    description: 'Defines the line height of the Digital Clock',\n    type: 'number',\n    defaultValue: '1.43'\n  },\n  'clock.digital.text.medium.size': {\n    description: 'Defines the font size of the Digital Clock',\n    type: 'string',\n    defaultValue: '18px'\n  },\n  'clock.digital.text.medium.height': {\n    description: 'Defines the line height of the Digital Clock',\n    type: 'number',\n    defaultValue: '1.375'\n  },\n  'clock.digital.text.large.size': {\n    description: 'Defines the font size of the Digital Clock',\n    type: 'string',\n    defaultValue: '22px'\n  },\n  'clock.digital.text.large.height': {\n    description: 'Defines the line height of the Digital Clock',\n    type: 'number',\n    defaultValue: '1.167'\n  },\n  'clock.digital.text.xlarge.size': {\n    description: 'Defines the font size of the Digital Clock',\n    type: 'string',\n    defaultValue: '26px'\n  },\n  'clock.digital.text.xlarge.height': {\n    description: 'Defines the line height of the Digital Clock',\n    type: 'number',\n    defaultValue: '1.1875'\n  },\n  'clock.digital.text.xxlarge.size': {\n    description: 'Defines the font size of the Digital Clock',\n    type: 'string',\n    defaultValue: '34px'\n  },\n  'clock.digital.text.xxlarge.height': {\n    description: 'Defines the line height of the Digital Clock',\n    type: 'number',\n    defaultValue: '1.125'\n  }\n};","map":{"version":3,"sources":["C:/Users/antaresofficial/Desktop/tree/node_modules/grommet/es6/components/Clock/doc.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","describe","PropTypes","genericProps","getAvailableAtBadge","doc","Clock","DocumentedClock","availableAt","description","usage","intrinsicElement","propTypes","hourLimit","oneOf","defaultValue","onChange","func","precision","run","oneOfType","bool","size","string","time","type","themeDoc","undefined"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { describe, PropTypes } from 'react-desc';\nimport { genericProps } from '../../utils/prop-types';\nimport { getAvailableAtBadge } from '../../utils/mixins';\nexport var doc = function doc(Clock) {\n  var DocumentedClock = describe(Clock).availableAt(getAvailableAtBadge('Clock', 'Visualization')).description('A clock with timezone awareness.').usage(\"import { Clock } from 'grommet';\\n<Clock />\").intrinsicElement(['div', 'svg']);\n  DocumentedClock.propTypes = _extends({}, genericProps, {\n    hourLimit: PropTypes.oneOf([12, 24, '12', '24']).description('Whether to roll over the hours after 12 or after 24.').defaultValue(24),\n    onChange: PropTypes.func.description(\"If the clock is running, this function will be called with the\\n      current time value each time it changes.\"),\n    precision: PropTypes.oneOf(['hours', 'minutes', 'seconds']).description('How precise a time to represent.').defaultValue('seconds'),\n    run: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['backward', 'forward'])]).description(\"Whether the clock should actively adjust time or be fixed to the\\n      time specified. 'backward' could be used as a countdown timer.\").defaultValue('forward'),\n    size: PropTypes.oneOfType([PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge', 'xxlarge']), PropTypes.string]).description(\"Size for both Analog and Digital Clocks. For Analog,\\n      there's also 'huge', that's equal to 'xxlarge' and exists\\n      for backwards compatibility\").defaultValue('medium'),\n    time: PropTypes.string.description(\"ISO8601 time or duration. For example: 'PT8H12M23S',\\n      'T08:12:23', or '2015-02-22T08:12:23'. Any included date\\n      portion will be ignored. If not provided, the\\n      current browser time will be used.\"),\n    type: PropTypes.oneOf(['analog', 'digital']).description('What type of visualization to show.').defaultValue('analog')\n  });\n  return DocumentedClock;\n};\nexport var themeDoc = {\n  'clock.analog.extend': {\n    description: 'Any additional style for the Analog Clock.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  },\n  'clock.analog.hour.color': {\n    description: 'The color of the hour hand.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: '{ dark: light-2, light: dark-3 }'\n  },\n  'clock.analog.hour.shape': {\n    description: 'The shape of the hour hand',\n    type: 'string',\n    defaultValue: 'round'\n  },\n  'clock.analog.hour.size': {\n    description: 'The length of the hour hand.',\n    type: 'string',\n    defaultValue: '24px'\n  },\n  'clock.analog.hour.width': {\n    description: 'The thickness of the hour hand',\n    type: 'string',\n    defaultValue: '8px'\n  },\n  'clock.analog.minute.color': {\n    description: 'The color of the minute hand.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: '{ dark: light-4, light: dark-3 }'\n  },\n  'clock.analog.minute.shape': {\n    description: 'The shape of the minute hand.',\n    type: 'string',\n    defaultValue: 'round'\n  },\n  'clock.analog.minute.size': {\n    description: 'The length of the minute hand.',\n    type: 'string',\n    defaultValue: '12px'\n  },\n  'clock.analog.minute.width': {\n    description: 'The thickness of the minute hand.',\n    type: 'string',\n    defaultValue: '4px'\n  },\n  'clock.analog.second.color': {\n    description: 'The color of the seconds hand',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: '{ dark: accent-1, light: accent-1 }'\n  },\n  'clock.analog.second.shape': {\n    description: 'The shape of the seconds hand.',\n    type: 'string',\n    defaultValue: 'round'\n  },\n  'clock.analog.second.size': {\n    description: 'The length of the seconds hand.',\n    type: 'string',\n    defaultValue: '10px'\n  },\n  'clock.analog.second.width': {\n    description: 'The thickness of the seconds hand.',\n    type: 'string',\n    defaultValue: '3px'\n  },\n  'clock.analog.size.xsmall': {\n    description: 'The whole size of the Analog Clock',\n    type: 'string',\n    defaultValue: '48px'\n  },\n  'clock.analog.size.small': {\n    description: 'The whole size of the Analog Clock',\n    type: 'string',\n    defaultValue: '72px'\n  },\n  'clock.analog.size.medium': {\n    description: 'The whole size of the Analog Clock',\n    type: 'string',\n    defaultValue: '96px'\n  },\n  'clock.analog.size.large': {\n    description: 'The whole size of the Analog Clock',\n    type: 'string',\n    defaultValue: '144px'\n  },\n  'clock.analog.size.xlarge': {\n    description: 'The whole size of the Analog Clock',\n    type: 'string',\n    defaultValue: '216px'\n  },\n  'clock.analog.size.xxlarge': {\n    description: 'The whole size of the Analog Clock',\n    type: 'string',\n    defaultValue: '288px'\n  },\n  'clock.analog.size.huge': {\n    description: 'The whole size of the Analog Clock',\n    type: 'string',\n    defaultValue: '288px'\n  },\n  'clock.digital.text.xsmall.size': {\n    description: 'Defines the font size of the Digital Clock',\n    type: 'string',\n    defaultValue: '10px'\n  },\n  'clock.digital.text.xsmall.height': {\n    description: 'Defines the line height of the Digital Clock',\n    type: 'number',\n    defaultValue: '1.5'\n  },\n  'clock.digital.text.small.size': {\n    description: 'Defines the font size of the Digital Clock',\n    type: 'string',\n    defaultValue: '14px'\n  },\n  'clock.digital.text.small.height': {\n    description: 'Defines the line height of the Digital Clock',\n    type: 'number',\n    defaultValue: '1.43'\n  },\n  'clock.digital.text.medium.size': {\n    description: 'Defines the font size of the Digital Clock',\n    type: 'string',\n    defaultValue: '18px'\n  },\n  'clock.digital.text.medium.height': {\n    description: 'Defines the line height of the Digital Clock',\n    type: 'number',\n    defaultValue: '1.375'\n  },\n  'clock.digital.text.large.size': {\n    description: 'Defines the font size of the Digital Clock',\n    type: 'string',\n    defaultValue: '22px'\n  },\n  'clock.digital.text.large.height': {\n    description: 'Defines the line height of the Digital Clock',\n    type: 'number',\n    defaultValue: '1.167'\n  },\n  'clock.digital.text.xlarge.size': {\n    description: 'Defines the font size of the Digital Clock',\n    type: 'string',\n    defaultValue: '26px'\n  },\n  'clock.digital.text.xlarge.height': {\n    description: 'Defines the line height of the Digital Clock',\n    type: 'number',\n    defaultValue: '1.1875'\n  },\n  'clock.digital.text.xxlarge.size': {\n    description: 'Defines the font size of the Digital Clock',\n    type: 'string',\n    defaultValue: '34px'\n  },\n  'clock.digital.text.xxlarge.height': {\n    description: 'Defines the line height of the Digital Clock',\n    type: 'number',\n    defaultValue: '1.125'\n  }\n};"]},"metadata":{},"sourceType":"module"}