{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { Box } from '../Box';\nvar XAxis = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var chartProps = _ref.chartProps,\n      data = _ref.data,\n      renderValue = _ref.renderValue,\n      serie = _ref.serie; // pull the x-axis values from the first chart, all should have the same\n\n  var _axis = (Array.isArray(chartProps[0]) ? chartProps[0][0] : chartProps[0]).axis,\n      axisValues = _axis[0];\n  return /*#__PURE__*/React.createElement(Box, {\n    ref: ref,\n    gridArea: \"xAxis\",\n    direction: \"row\",\n    justify: \"between\"\n  }, axisValues.map(function (dataIndex, i) {\n    var align;\n    if (axisValues.length === data.length) align = 'center';else if (i === 0) align = 'start';else if (i === axisValues.length - 1) align = 'end';else align = 'center';\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line react/no-array-index-key\n      React.createElement(Box, {\n        key: i,\n        flex: true,\n        align: align\n      }, serie ? renderValue(serie, dataIndex) : dataIndex)\n    );\n  }));\n});\nexport { XAxis };","map":{"version":3,"sources":["C:/Users/antaresofficial/Desktop/tree/node_modules/grommet/es6/components/DataChart/XAxis.js"],"names":["React","forwardRef","Box","XAxis","_ref","ref","chartProps","data","renderValue","serie","_axis","Array","isArray","axis","axisValues","createElement","gridArea","direction","justify","map","dataIndex","i","align","length","key","flex"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,IAAIC,KAAK,GAAG,aAAaF,UAAU,CAAC,UAAUG,IAAV,EAAgBC,GAAhB,EAAqB;AACvD,MAAIC,UAAU,GAAGF,IAAI,CAACE,UAAtB;AAAA,MACIC,IAAI,GAAGH,IAAI,CAACG,IADhB;AAAA,MAEIC,WAAW,GAAGJ,IAAI,CAACI,WAFvB;AAAA,MAGIC,KAAK,GAAGL,IAAI,CAACK,KAHjB,CADuD,CAKvD;;AACA,MAAIC,KAAK,GAAG,CAACC,KAAK,CAACC,OAAN,CAAcN,UAAU,CAAC,CAAD,CAAxB,IAA+BA,UAAU,CAAC,CAAD,CAAV,CAAc,CAAd,CAA/B,GAAkDA,UAAU,CAAC,CAAD,CAA7D,EAAkEO,IAA9E;AAAA,MACIC,UAAU,GAAGJ,KAAK,CAAC,CAAD,CADtB;AAEA,SAAO,aAAaV,KAAK,CAACe,aAAN,CAAoBb,GAApB,EAAyB;AAC3CG,IAAAA,GAAG,EAAEA,GADsC;AAE3CW,IAAAA,QAAQ,EAAE,OAFiC;AAG3CC,IAAAA,SAAS,EAAE,KAHgC;AAI3CC,IAAAA,OAAO,EAAE;AAJkC,GAAzB,EAKjBJ,UAAU,CAACK,GAAX,CAAe,UAAUC,SAAV,EAAqBC,CAArB,EAAwB;AACxC,QAAIC,KAAJ;AACA,QAAIR,UAAU,CAACS,MAAX,KAAsBhB,IAAI,CAACgB,MAA/B,EAAuCD,KAAK,GAAG,QAAR,CAAvC,KAA6D,IAAID,CAAC,KAAK,CAAV,EAAaC,KAAK,GAAG,OAAR,CAAb,KAAkC,IAAID,CAAC,KAAKP,UAAU,CAACS,MAAX,GAAoB,CAA9B,EAAiCD,KAAK,GAAG,KAAR,CAAjC,KAAoDA,KAAK,GAAG,QAAR;AACnJ;AACE;AACA;AACAtB,MAAAA,KAAK,CAACe,aAAN,CAAoBb,GAApB,EAAyB;AACvBsB,QAAAA,GAAG,EAAEH,CADkB;AAEvBI,QAAAA,IAAI,EAAE,IAFiB;AAGvBH,QAAAA,KAAK,EAAEA;AAHgB,OAAzB,EAIGb,KAAK,GAAGD,WAAW,CAACC,KAAD,EAAQW,SAAR,CAAd,GAAmCA,SAJ3C;AAHF;AASD,GAZE,CALiB,CAApB;AAkBD,CA1BkC,CAAnC;AA2BA,SAASjB,KAAT","sourcesContent":["import React, { forwardRef } from 'react';\nimport { Box } from '../Box';\nvar XAxis = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var chartProps = _ref.chartProps,\n      data = _ref.data,\n      renderValue = _ref.renderValue,\n      serie = _ref.serie;\n  // pull the x-axis values from the first chart, all should have the same\n  var _axis = (Array.isArray(chartProps[0]) ? chartProps[0][0] : chartProps[0]).axis,\n      axisValues = _axis[0];\n  return /*#__PURE__*/React.createElement(Box, {\n    ref: ref,\n    gridArea: \"xAxis\",\n    direction: \"row\",\n    justify: \"between\"\n  }, axisValues.map(function (dataIndex, i) {\n    var align;\n    if (axisValues.length === data.length) align = 'center';else if (i === 0) align = 'start';else if (i === axisValues.length - 1) align = 'end';else align = 'center';\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line react/no-array-index-key\n      React.createElement(Box, {\n        key: i,\n        flex: true,\n        align: align\n      }, serie ? renderValue(serie, dataIndex) : dataIndex)\n    );\n  }));\n});\nexport { XAxis };"]},"metadata":{},"sourceType":"module"}