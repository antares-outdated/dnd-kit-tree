{"ast":null,"code":"import React, { cloneElement, useContext, useRef, useState } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { Box } from '../Box';\nimport { Text } from '../Text';\nimport { Layer } from '../Layer';\nimport { defaultProps } from '../../default-props';\n\nvar SkipLinks = function SkipLinks(_ref) {\n  var children = _ref.children,\n      id = _ref.id,\n      messages = _ref.messages;\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n\n  var _useState = useState(false),\n      showLayer = _useState[0],\n      setShowLayer = _useState[1];\n\n  var layerRef = useRef(null);\n\n  var onFocus = function onFocus() {\n    setShowLayer(true);\n  };\n\n  var removeLayer = function removeLayer() {\n    setShowLayer(false);\n  };\n\n  var onBlur = function onBlur() {\n    // timeout needed so it gives enough time for activeElement to be updated\n    setTimeout(function () {\n      var layerNode = layerRef.current;\n\n      if (layerNode && !layerNode.contains(document.activeElement)) {\n        // close the layer when the activeElement isn't contained in the layer\n        removeLayer();\n      }\n    }, 0);\n  };\n\n  return /*#__PURE__*/React.createElement(Layer, {\n    id: id,\n    position: showLayer ? theme.skipLinks.position : 'hidden',\n    ref: layerRef,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    modal: false // Prepend the Layer so any SkipLink will be the first element that\n    // pressing the Tab key reaches, targetChildPosition triggers prepend.\n    ,\n    targetChildPosition: \"first\" // Non-modal Layer's will take the full screen at small breakpoints\n    // by default, which isn't what we want, hence setting responsive false\n    ,\n    responsive: false\n  }, /*#__PURE__*/React.createElement(Box, theme.skipLinks.container, messages.skipTo && /*#__PURE__*/React.createElement(Text, theme.skipLinks.label, messages.skipTo), /*#__PURE__*/React.createElement(Box, {\n    align: \"center\",\n    gap: \"medium\"\n  }, children.map(function (element, index) {\n    return /*#__PURE__*/cloneElement(element, {\n      key: \"skip-link-\" + index,\n      onClick: removeLayer\n    });\n  }))));\n};\n\nSkipLinks.defaultProps = {\n  messages: {\n    skipTo: 'Skip To:'\n  }\n};\nvar SkipLinksDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line global-require\n  SkipLinksDoc = require('./doc').doc(SkipLinks);\n}\n\nvar SkipLinksWrapper = SkipLinksDoc || SkipLinks;\nexport { SkipLinksWrapper as SkipLinks };","map":{"version":3,"sources":["C:/Users/antaresofficial/Desktop/tree/node_modules/grommet/es6/components/SkipLinks/SkipLinks.js"],"names":["React","cloneElement","useContext","useRef","useState","ThemeContext","Box","Text","Layer","defaultProps","SkipLinks","_ref","children","id","messages","theme","_useState","showLayer","setShowLayer","layerRef","onFocus","removeLayer","onBlur","setTimeout","layerNode","current","contains","document","activeElement","createElement","position","skipLinks","ref","modal","targetChildPosition","responsive","container","skipTo","label","align","gap","map","element","index","key","onClick","SkipLinksDoc","process","env","NODE_ENV","require","doc","SkipLinksWrapper"],"mappings":"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","sourcesContent":["import React, { cloneElement, useContext, useRef, useState } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { Box } from '../Box';\nimport { Text } from '../Text';\nimport { Layer } from '../Layer';\nimport { defaultProps } from '../../default-props';\n\nvar SkipLinks = function SkipLinks(_ref) {\n  var children = _ref.children,\n      id = _ref.id,\n      messages = _ref.messages;\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n\n  var _useState = useState(false),\n      showLayer = _useState[0],\n      setShowLayer = _useState[1];\n\n  var layerRef = useRef(null);\n\n  var onFocus = function onFocus() {\n    setShowLayer(true);\n  };\n\n  var removeLayer = function removeLayer() {\n    setShowLayer(false);\n  };\n\n  var onBlur = function onBlur() {\n    // timeout needed so it gives enough time for activeElement to be updated\n    setTimeout(function () {\n      var layerNode = layerRef.current;\n\n      if (layerNode && !layerNode.contains(document.activeElement)) {\n        // close the layer when the activeElement isn't contained in the layer\n        removeLayer();\n      }\n    }, 0);\n  };\n\n  return /*#__PURE__*/React.createElement(Layer, {\n    id: id,\n    position: showLayer ? theme.skipLinks.position : 'hidden',\n    ref: layerRef,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    modal: false // Prepend the Layer so any SkipLink will be the first element that\n    // pressing the Tab key reaches, targetChildPosition triggers prepend.\n    ,\n    targetChildPosition: \"first\" // Non-modal Layer's will take the full screen at small breakpoints\n    // by default, which isn't what we want, hence setting responsive false\n    ,\n    responsive: false\n  }, /*#__PURE__*/React.createElement(Box, theme.skipLinks.container, messages.skipTo && /*#__PURE__*/React.createElement(Text, theme.skipLinks.label, messages.skipTo), /*#__PURE__*/React.createElement(Box, {\n    align: \"center\",\n    gap: \"medium\"\n  }, children.map(function (element, index) {\n    return /*#__PURE__*/cloneElement(element, {\n      key: \"skip-link-\" + index,\n      onClick: removeLayer\n    });\n  }))));\n};\n\nSkipLinks.defaultProps = {\n  messages: {\n    skipTo: 'Skip To:'\n  }\n};\nvar SkipLinksDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line global-require\n  SkipLinksDoc = require('./doc').doc(SkipLinks);\n}\n\nvar SkipLinksWrapper = SkipLinksDoc || SkipLinks;\nexport { SkipLinksWrapper as SkipLinks };"]},"metadata":{},"sourceType":"module"}