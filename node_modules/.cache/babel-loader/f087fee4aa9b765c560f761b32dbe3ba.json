{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { describe, PropTypes } from 'react-desc';\nimport { getAvailableAtBadge } from '../../utils/mixins';\nimport { themeDocUtils } from '../../utils/themeDocUtils';\nexport var doc = function doc(RangeInput) {\n  var DocumentedRangeInput = describe(RangeInput).availableAt(getAvailableAtBadge('RangeInput', 'Input')).description('A slider control to input a value within a fixed range.').usage(\"import { RangeInput } from 'grommet';\\n<RangeInput />\").intrinsicElement('input');\n  DocumentedRangeInput.propTypes = {\n    a11yTitle: PropTypes.string.description(\"Custom label to be used by screen readers.\\n      When provided, an aria-label will be added to the element.\"),\n    id: PropTypes.string.description('The id attribute of the range input.'),\n    min: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).description('The minimum value permitted.'),\n    max: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).description('The maximum value permitted.'),\n    name: PropTypes.string.description('The name attribute of the range input.'),\n    onChange: PropTypes.func.description(\"Function that will be called when the user changes the value. It will\\n      be passed an event object. The new input value will be available\\n      via 'event.target.value'.\"),\n    step: PropTypes.number.description('The step interval between values.'),\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).description('The current value.')\n  };\n  return DocumentedRangeInput;\n};\nexport var themeDoc = _extends({}, themeDocUtils.focusStyle, {\n  'global.colors.border': {\n    description: 'The color used for rangeInput.track.color.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: '{ dark: rgba(255, 255, 255, 0.33), light: rgba(0, 0, 0, 0.33) }'\n  },\n  'global.spacing': {\n    description: 'The height, width and border-radius of the range thumb.',\n    type: 'string',\n    defaultValue: '24px'\n  },\n  'rangeInput.extend': {\n    description: 'Any additional style for the RangeInput.',\n    type: \"string | (props) => `\\n      any CSS styling;\\n    `\",\n    defaultValue: undefined\n  },\n  'rangeInput.thumb.color': {\n    description: 'The color of the thumb.',\n    type: 'string | { dark: undefined, light: undefined }',\n    defaultValue: undefined\n  },\n  'rangeInput.thumb.extend': {\n    description: 'Any additional style for the thumb.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  },\n  'rangeInput.track.color': {\n    description: 'The color of the track.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: 'border'\n  },\n  'rangeInput.track.opacity': {\n    description: 'The opacity of the track color.',\n    type: 'string | number',\n    defaultValue: undefined\n  },\n  'rangeInput.track.lower.color': {\n    description: 'The color of the lower bound track.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: undefined\n  },\n  'rangeInput.track.lower.opacity': {\n    description: 'The opacity on the lower bound track color.',\n    type: 'string | number',\n    defaultValue: undefined\n  },\n  'rangeInput.track.upper.color': {\n    description: 'The color of the upper track.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: undefined\n  },\n  'rangeInput.track.upper.opacity': {\n    description: 'The opacity on the upper track color.',\n    type: 'string | number',\n    defaultValue: undefined\n  },\n  'rangeInput.track.extend': {\n    description: 'Any additional style for the track.',\n    type: \"string | (props) => `\\n      any CSS styling;\\n    `\",\n    defaultValue: undefined\n  },\n  'rangeInput.track.height': {\n    description: 'The height of the track.',\n    type: 'string',\n    defaultValue: '4px'\n  }\n});","map":{"version":3,"sources":["C:/Users/antaresofficial/Desktop/tree/node_modules/grommet/es6/components/RangeInput/doc.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","describe","PropTypes","getAvailableAtBadge","themeDocUtils","doc","RangeInput","DocumentedRangeInput","availableAt","description","usage","intrinsicElement","propTypes","a11yTitle","string","id","min","oneOfType","number","max","name","onChange","func","step","value","themeDoc","focusStyle","type","defaultValue","undefined"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { describe, PropTypes } from 'react-desc';\nimport { getAvailableAtBadge } from '../../utils/mixins';\nimport { themeDocUtils } from '../../utils/themeDocUtils';\nexport var doc = function doc(RangeInput) {\n  var DocumentedRangeInput = describe(RangeInput).availableAt(getAvailableAtBadge('RangeInput', 'Input')).description('A slider control to input a value within a fixed range.').usage(\"import { RangeInput } from 'grommet';\\n<RangeInput />\").intrinsicElement('input');\n  DocumentedRangeInput.propTypes = {\n    a11yTitle: PropTypes.string.description(\"Custom label to be used by screen readers.\\n      When provided, an aria-label will be added to the element.\"),\n    id: PropTypes.string.description('The id attribute of the range input.'),\n    min: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).description('The minimum value permitted.'),\n    max: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).description('The maximum value permitted.'),\n    name: PropTypes.string.description('The name attribute of the range input.'),\n    onChange: PropTypes.func.description(\"Function that will be called when the user changes the value. It will\\n      be passed an event object. The new input value will be available\\n      via 'event.target.value'.\"),\n    step: PropTypes.number.description('The step interval between values.'),\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).description('The current value.')\n  };\n  return DocumentedRangeInput;\n};\nexport var themeDoc = _extends({}, themeDocUtils.focusStyle, {\n  'global.colors.border': {\n    description: 'The color used for rangeInput.track.color.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: '{ dark: rgba(255, 255, 255, 0.33), light: rgba(0, 0, 0, 0.33) }'\n  },\n  'global.spacing': {\n    description: 'The height, width and border-radius of the range thumb.',\n    type: 'string',\n    defaultValue: '24px'\n  },\n  'rangeInput.extend': {\n    description: 'Any additional style for the RangeInput.',\n    type: \"string | (props) => `\\n      any CSS styling;\\n    `\",\n    defaultValue: undefined\n  },\n  'rangeInput.thumb.color': {\n    description: 'The color of the thumb.',\n    type: 'string | { dark: undefined, light: undefined }',\n    defaultValue: undefined\n  },\n  'rangeInput.thumb.extend': {\n    description: 'Any additional style for the thumb.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  },\n  'rangeInput.track.color': {\n    description: 'The color of the track.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: 'border'\n  },\n  'rangeInput.track.opacity': {\n    description: 'The opacity of the track color.',\n    type: 'string | number',\n    defaultValue: undefined\n  },\n  'rangeInput.track.lower.color': {\n    description: 'The color of the lower bound track.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: undefined\n  },\n  'rangeInput.track.lower.opacity': {\n    description: 'The opacity on the lower bound track color.',\n    type: 'string | number',\n    defaultValue: undefined\n  },\n  'rangeInput.track.upper.color': {\n    description: 'The color of the upper track.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: undefined\n  },\n  'rangeInput.track.upper.opacity': {\n    description: 'The opacity on the upper track color.',\n    type: 'string | number',\n    defaultValue: undefined\n  },\n  'rangeInput.track.extend': {\n    description: 'Any additional style for the track.',\n    type: \"string | (props) => `\\n      any CSS styling;\\n    `\",\n    defaultValue: undefined\n  },\n  'rangeInput.track.height': {\n    description: 'The height of the track.',\n    type: 'string',\n    defaultValue: '4px'\n  }\n});"]},"metadata":{},"sourceType":"module"}