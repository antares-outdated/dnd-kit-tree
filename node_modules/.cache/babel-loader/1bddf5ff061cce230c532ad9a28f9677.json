{"ast":null,"code":"import { PropTypes } from 'react-desc';\nexport var a11yTitlePropType = PropTypes.string.description(\"Custom label to be used by screen readers. When provided, an aria-label will\\n   be added to the element.\");\nexport var getBorderPropType = function getBorderPropType(_ref) {\n  var _ref$includeBetween = _ref.includeBetween,\n      includeBetween = _ref$includeBetween === void 0 ? true : _ref$includeBetween;\n  return PropTypes.shape({\n    color: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n      dark: PropTypes.string,\n      light: PropTypes.string\n    })]),\n    side: PropTypes.oneOf(['top', 'left', 'bottom', 'right', 'start', 'end', 'horizontal', 'vertical', 'all'].concat(includeBetween ? ['between'] : [])),\n    size: PropTypes.oneOfType([PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge']), PropTypes.string]),\n    style: PropTypes.oneOf(['solid', 'dashed', 'dotted', 'double', 'groove', 'ridge', 'inset', 'outset', 'hidden']).defaultValue('solid')\n  });\n};\nexport var colorPropType = PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n  dark: PropTypes.string,\n  light: PropTypes.string\n})]);\nexport var backgroundPropType = PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n  color: colorPropType,\n  dark: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  image: PropTypes.string,\n  position: PropTypes.string,\n  opacity: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.number, PropTypes.oneOf(['weak', 'medium', 'strong'])]),\n  repeat: PropTypes.oneOfType([PropTypes.oneOf(['no-repeat', 'repeat']), PropTypes.string]),\n  size: PropTypes.oneOfType([PropTypes.oneOf(['cover', 'contain']), PropTypes.string]),\n  light: PropTypes.string\n})]);\nexport var backgroundDoc = backgroundPropType.description(\"Either a color \\nidentifier to use for the background color. For example: 'neutral-1'. Or, a \\n'url()' for an image. Dark is not needed if color is provided.\");\nexport var MARGIN_SIZES = ['xxsmall', 'xsmall', 'small', 'medium', 'large', 'xlarge'];\nexport var marginProp = PropTypes.oneOfType([PropTypes.oneOf(['none'].concat(MARGIN_SIZES)), PropTypes.shape({\n  bottom: PropTypes.oneOfType([PropTypes.oneOf(MARGIN_SIZES), PropTypes.string]),\n  end: PropTypes.oneOfType([PropTypes.oneOf(MARGIN_SIZES), PropTypes.string]),\n  horizontal: PropTypes.oneOfType([PropTypes.oneOf(MARGIN_SIZES), PropTypes.string]),\n  left: PropTypes.oneOfType([PropTypes.oneOf(MARGIN_SIZES), PropTypes.string]),\n  right: PropTypes.oneOfType([PropTypes.oneOf(MARGIN_SIZES), PropTypes.string]),\n  start: PropTypes.oneOfType([PropTypes.oneOf(MARGIN_SIZES), PropTypes.string]),\n  top: PropTypes.oneOfType([PropTypes.oneOf(MARGIN_SIZES), PropTypes.string]),\n  vertical: PropTypes.oneOfType([PropTypes.oneOf(MARGIN_SIZES), PropTypes.string])\n}), PropTypes.string]).description(\"The amount of margin around the component. An object can\\n    be specified to distinguish horizontal margin, vertical margin, and\\n    margin on a particular side.\");\nvar PAD_SIZES = ['xxsmall', 'xsmall', 'small', 'medium', 'large', 'xlarge'];\nexport var padPropType = PropTypes.oneOfType([PropTypes.oneOf(['none'].concat(PAD_SIZES)), PropTypes.shape({\n  bottom: PropTypes.oneOfType([PropTypes.oneOf(PAD_SIZES), PropTypes.string]),\n  end: PropTypes.oneOfType([PropTypes.oneOf(PAD_SIZES), PropTypes.string]),\n  horizontal: PropTypes.oneOfType([PropTypes.oneOf(PAD_SIZES), PropTypes.string]),\n  left: PropTypes.oneOfType([PropTypes.oneOf(PAD_SIZES), PropTypes.string]),\n  right: PropTypes.oneOfType([PropTypes.oneOf(PAD_SIZES), PropTypes.string]),\n  start: PropTypes.oneOfType([PropTypes.oneOf(PAD_SIZES), PropTypes.string]),\n  top: PropTypes.oneOfType([PropTypes.oneOf(PAD_SIZES), PropTypes.string]),\n  vertical: PropTypes.oneOfType([PropTypes.oneOf(PAD_SIZES), PropTypes.string])\n}), PropTypes.string]).description(\"The amount of padding around the box contents. An\\n    object can be specified to distinguish horizontal padding, vertical\\n    padding, and padding on a particular side of the box\").defaultValue('none');\nexport var genericProps = {\n  a11yTitle: a11yTitlePropType,\n  alignSelf: PropTypes.oneOf(['start', 'center', 'end', 'stretch']).description(\"How to align along the cross axis when contained in\\n      a Box or along the column axis when contained in a Grid.\"),\n  gridArea: PropTypes.string.description(\"The name of the area to place\\n    this inside a parent Grid.\"),\n  margin: marginProp\n};\nexport var elevationPropType = PropTypes.oneOfType([PropTypes.oneOf(['none', 'xsmall', 'small', 'medium', 'large', 'xlarge']), PropTypes.string]);\nexport var hoverIndicatorPropType = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.oneOf(['background']), backgroundPropType, PropTypes.shape({\n  background: backgroundPropType,\n  elevation: elevationPropType\n})]);\nexport var pointPropType = PropTypes.oneOf(['circle', 'diamond', 'square', 'star', 'triangle', 'triangleDown']);\nexport var patternPropType = PropTypes.oneOf(['squares', 'circles', 'stripesHorizontal', 'stripesVertical', 'stripesDiagonalDown', 'stripesDiagonalUp']);\nexport var roundPropType = PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge', 'full']), PropTypes.string, PropTypes.shape({\n  corner: PropTypes.oneOf(['top', 'left', 'bottom', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right']),\n  size: PropTypes.oneOfType([PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge']), PropTypes.string])\n})]).description('How much to round the corners.').defaultValue(undefined);","map":{"version":3,"sources":["C:/Users/antaresofficial/Desktop/tree/node_modules/grommet/es6/utils/prop-types.js"],"names":["PropTypes","a11yTitlePropType","string","description","getBorderPropType","_ref","_ref$includeBetween","includeBetween","shape","color","oneOfType","dark","light","side","oneOf","concat","size","style","defaultValue","colorPropType","backgroundPropType","bool","image","position","opacity","number","repeat","backgroundDoc","MARGIN_SIZES","marginProp","bottom","end","horizontal","left","right","start","top","vertical","PAD_SIZES","padPropType","genericProps","a11yTitle","alignSelf","gridArea","margin","elevationPropType","hoverIndicatorPropType","background","elevation","pointPropType","patternPropType","roundPropType","corner","undefined"],"mappings":"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","sourcesContent":["import { PropTypes } from 'react-desc';\nexport var a11yTitlePropType = PropTypes.string.description(\"Custom label to be used by screen readers. When provided, an aria-label will\\n   be added to the element.\");\nexport var getBorderPropType = function getBorderPropType(_ref) {\n  var _ref$includeBetween = _ref.includeBetween,\n      includeBetween = _ref$includeBetween === void 0 ? true : _ref$includeBetween;\n  return PropTypes.shape({\n    color: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n      dark: PropTypes.string,\n      light: PropTypes.string\n    })]),\n    side: PropTypes.oneOf(['top', 'left', 'bottom', 'right', 'start', 'end', 'horizontal', 'vertical', 'all'].concat(includeBetween ? ['between'] : [])),\n    size: PropTypes.oneOfType([PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge']), PropTypes.string]),\n    style: PropTypes.oneOf(['solid', 'dashed', 'dotted', 'double', 'groove', 'ridge', 'inset', 'outset', 'hidden']).defaultValue('solid')\n  });\n};\nexport var colorPropType = PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n  dark: PropTypes.string,\n  light: PropTypes.string\n})]);\nexport var backgroundPropType = PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n  color: colorPropType,\n  dark: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  image: PropTypes.string,\n  position: PropTypes.string,\n  opacity: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.number, PropTypes.oneOf(['weak', 'medium', 'strong'])]),\n  repeat: PropTypes.oneOfType([PropTypes.oneOf(['no-repeat', 'repeat']), PropTypes.string]),\n  size: PropTypes.oneOfType([PropTypes.oneOf(['cover', 'contain']), PropTypes.string]),\n  light: PropTypes.string\n})]);\nexport var backgroundDoc = backgroundPropType.description(\"Either a color \\nidentifier to use for the background color. For example: 'neutral-1'. Or, a \\n'url()' for an image. Dark is not needed if color is provided.\");\nexport var MARGIN_SIZES = ['xxsmall', 'xsmall', 'small', 'medium', 'large', 'xlarge'];\nexport var marginProp = PropTypes.oneOfType([PropTypes.oneOf(['none'].concat(MARGIN_SIZES)), PropTypes.shape({\n  bottom: PropTypes.oneOfType([PropTypes.oneOf(MARGIN_SIZES), PropTypes.string]),\n  end: PropTypes.oneOfType([PropTypes.oneOf(MARGIN_SIZES), PropTypes.string]),\n  horizontal: PropTypes.oneOfType([PropTypes.oneOf(MARGIN_SIZES), PropTypes.string]),\n  left: PropTypes.oneOfType([PropTypes.oneOf(MARGIN_SIZES), PropTypes.string]),\n  right: PropTypes.oneOfType([PropTypes.oneOf(MARGIN_SIZES), PropTypes.string]),\n  start: PropTypes.oneOfType([PropTypes.oneOf(MARGIN_SIZES), PropTypes.string]),\n  top: PropTypes.oneOfType([PropTypes.oneOf(MARGIN_SIZES), PropTypes.string]),\n  vertical: PropTypes.oneOfType([PropTypes.oneOf(MARGIN_SIZES), PropTypes.string])\n}), PropTypes.string]).description(\"The amount of margin around the component. An object can\\n    be specified to distinguish horizontal margin, vertical margin, and\\n    margin on a particular side.\");\nvar PAD_SIZES = ['xxsmall', 'xsmall', 'small', 'medium', 'large', 'xlarge'];\nexport var padPropType = PropTypes.oneOfType([PropTypes.oneOf(['none'].concat(PAD_SIZES)), PropTypes.shape({\n  bottom: PropTypes.oneOfType([PropTypes.oneOf(PAD_SIZES), PropTypes.string]),\n  end: PropTypes.oneOfType([PropTypes.oneOf(PAD_SIZES), PropTypes.string]),\n  horizontal: PropTypes.oneOfType([PropTypes.oneOf(PAD_SIZES), PropTypes.string]),\n  left: PropTypes.oneOfType([PropTypes.oneOf(PAD_SIZES), PropTypes.string]),\n  right: PropTypes.oneOfType([PropTypes.oneOf(PAD_SIZES), PropTypes.string]),\n  start: PropTypes.oneOfType([PropTypes.oneOf(PAD_SIZES), PropTypes.string]),\n  top: PropTypes.oneOfType([PropTypes.oneOf(PAD_SIZES), PropTypes.string]),\n  vertical: PropTypes.oneOfType([PropTypes.oneOf(PAD_SIZES), PropTypes.string])\n}), PropTypes.string]).description(\"The amount of padding around the box contents. An\\n    object can be specified to distinguish horizontal padding, vertical\\n    padding, and padding on a particular side of the box\").defaultValue('none');\nexport var genericProps = {\n  a11yTitle: a11yTitlePropType,\n  alignSelf: PropTypes.oneOf(['start', 'center', 'end', 'stretch']).description(\"How to align along the cross axis when contained in\\n      a Box or along the column axis when contained in a Grid.\"),\n  gridArea: PropTypes.string.description(\"The name of the area to place\\n    this inside a parent Grid.\"),\n  margin: marginProp\n};\nexport var elevationPropType = PropTypes.oneOfType([PropTypes.oneOf(['none', 'xsmall', 'small', 'medium', 'large', 'xlarge']), PropTypes.string]);\nexport var hoverIndicatorPropType = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.oneOf(['background']), backgroundPropType, PropTypes.shape({\n  background: backgroundPropType,\n  elevation: elevationPropType\n})]);\nexport var pointPropType = PropTypes.oneOf(['circle', 'diamond', 'square', 'star', 'triangle', 'triangleDown']);\nexport var patternPropType = PropTypes.oneOf(['squares', 'circles', 'stripesHorizontal', 'stripesVertical', 'stripesDiagonalDown', 'stripesDiagonalUp']);\nexport var roundPropType = PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge', 'full']), PropTypes.string, PropTypes.shape({\n  corner: PropTypes.oneOf(['top', 'left', 'bottom', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right']),\n  size: PropTypes.oneOfType([PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge']), PropTypes.string])\n})]).description('How much to round the corners.').defaultValue(undefined);"]},"metadata":{},"sourceType":"module"}