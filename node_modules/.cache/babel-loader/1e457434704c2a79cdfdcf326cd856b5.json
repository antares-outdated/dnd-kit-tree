{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { describe, PropTypes } from 'react-desc';\nimport { colorPropType, genericProps } from '../../utils/prop-types';\nimport { getAvailableAtBadge } from '../../utils/mixins';\nimport { themeDocUtils } from '../../utils/themeDocUtils';\nexport var doc = function doc(Heading) {\n  var DocumentedHeading = describe(Heading).availableAt(getAvailableAtBadge('Heading', 'Type')).description('Heading text structured in levels.').usage(\"import { Heading } from 'grommet';\\n<Heading />\").intrinsicElement(['h1', 'h2', 'h3', 'h4']);\n  DocumentedHeading.propTypes = _extends({}, genericProps, {\n    color: colorPropType.description('A color identifier to use for the text color.'),\n    fill: PropTypes.bool.description('Whether the width should fill the container.').defaultValue(undefined),\n    level: PropTypes.oneOf([1, 2, 3, 4, 5, 6, '1', '2', '3', '4', '5', '6']).description(\"The heading level. It corresponds to the number after the 'H' for\\nthe DOM tag. Set the level for semantic accuracy and accessibility.\\nThe sizing can be further adjusted using the size property.\").defaultValue(1),\n    responsive: PropTypes.bool.description(\"Whether the font size should be scaled for\\n      mobile environments.\").defaultValue(true),\n    size: PropTypes.oneOfType([PropTypes.oneOf(['small', 'medium', 'large', 'xlarge']), PropTypes.string]).description(\"The font size is primarily driven by the chosen tag. But, it can\\nbe adjusted via this size property. The tag should be set for semantic\\ncorrectness and accessibility. This size property allows for stylistic\\nadjustments.\").defaultValue('medium'),\n    textAlign: PropTypes.oneOf(['start', 'center', 'end']).description('How to align the text inside the heading.').defaultValue('start'),\n    truncate: PropTypes.bool.description(\"Restrict the text to a single line and truncate with ellipsis if it\\nis too long to all fit.\").defaultValue(false)\n  });\n  return DocumentedHeading;\n};\nexport var themeDoc = _extends({}, themeDocUtils.breakpointStyle('The possible breakpoints that could affect font-size and max-width'), themeDocUtils.edgeStyle('The possible sizes for margin.'), {\n  'heading.color': {\n    description: 'The color of the heading.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: undefined\n  },\n  'heading.extend': {\n    description: 'Any additional style for Heading.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  },\n  'heading.level': {\n    description: \"The level that impacts line-height, max-width, font size,\\nweight and family of the Heading. Heading styling is automatically adjusted at\\ndifferent screen sizes. When the heading.responsiveBreakpoint is hit (\\\"small\\\"\\nby default), all heading styles will automatically be adjusted. A heading of\\nlevel 1, for example, will use the styling defined in heading level 2; a\\nheading of level 2 will use the styling defined in heading level 3 and so\\nforth. The tag in the DOM is not adjusted. A heading of level 1 remains an h1.\\nThe styling adjustment is intended to aid readability on smaller screens but\\nwill not semantically affect your application structure. If you do not want\\nthis responsive styling to occur, you can set header.responsiveBreakpoint to\\nundefined.\",\n    type: 'object',\n    defaultValue: \"\\n      1: {\\n        medium: {\\n          size: 34px,\\n          height: 40px,\\n          width: 826px,\\n        },\\n      },\\n      weight: 600,\\n      font:\\n        {\\n          family: undefined,\\n        }\"\n  },\n  'heading.weight': {\n    description: 'Default heading weight used unless a per level heading is defined.',\n    type: 'number',\n    defaultValue: 600\n  },\n  'heading.font': {\n    description: 'Default heading font used unless a per level heading is defined.',\n    type: 'object',\n    defaultValue: undefined\n  },\n  'heading.responsiveBreakpoint': {\n    description: \"The breakpoint to trigger changes in the Heading layout.\\nThe actual values will be derived from global.breakpoints.\",\n    type: 'string',\n    defaultValue: 'small'\n  }\n});","map":{"version":3,"sources":["C:/Users/antaresofficial/Desktop/tree/node_modules/grommet/es6/components/Heading/doc.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","describe","PropTypes","colorPropType","genericProps","getAvailableAtBadge","themeDocUtils","doc","Heading","DocumentedHeading","availableAt","description","usage","intrinsicElement","propTypes","color","fill","bool","defaultValue","undefined","level","oneOf","responsive","size","oneOfType","string","textAlign","truncate","themeDoc","breakpointStyle","edgeStyle","type"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { describe, PropTypes } from 'react-desc';\nimport { colorPropType, genericProps } from '../../utils/prop-types';\nimport { getAvailableAtBadge } from '../../utils/mixins';\nimport { themeDocUtils } from '../../utils/themeDocUtils';\nexport var doc = function doc(Heading) {\n  var DocumentedHeading = describe(Heading).availableAt(getAvailableAtBadge('Heading', 'Type')).description('Heading text structured in levels.').usage(\"import { Heading } from 'grommet';\\n<Heading />\").intrinsicElement(['h1', 'h2', 'h3', 'h4']);\n  DocumentedHeading.propTypes = _extends({}, genericProps, {\n    color: colorPropType.description('A color identifier to use for the text color.'),\n    fill: PropTypes.bool.description('Whether the width should fill the container.').defaultValue(undefined),\n    level: PropTypes.oneOf([1, 2, 3, 4, 5, 6, '1', '2', '3', '4', '5', '6']).description(\"The heading level. It corresponds to the number after the 'H' for\\nthe DOM tag. Set the level for semantic accuracy and accessibility.\\nThe sizing can be further adjusted using the size property.\").defaultValue(1),\n    responsive: PropTypes.bool.description(\"Whether the font size should be scaled for\\n      mobile environments.\").defaultValue(true),\n    size: PropTypes.oneOfType([PropTypes.oneOf(['small', 'medium', 'large', 'xlarge']), PropTypes.string]).description(\"The font size is primarily driven by the chosen tag. But, it can\\nbe adjusted via this size property. The tag should be set for semantic\\ncorrectness and accessibility. This size property allows for stylistic\\nadjustments.\").defaultValue('medium'),\n    textAlign: PropTypes.oneOf(['start', 'center', 'end']).description('How to align the text inside the heading.').defaultValue('start'),\n    truncate: PropTypes.bool.description(\"Restrict the text to a single line and truncate with ellipsis if it\\nis too long to all fit.\").defaultValue(false)\n  });\n  return DocumentedHeading;\n};\nexport var themeDoc = _extends({}, themeDocUtils.breakpointStyle('The possible breakpoints that could affect font-size and max-width'), themeDocUtils.edgeStyle('The possible sizes for margin.'), {\n  'heading.color': {\n    description: 'The color of the heading.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: undefined\n  },\n  'heading.extend': {\n    description: 'Any additional style for Heading.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  },\n  'heading.level': {\n    description: \"The level that impacts line-height, max-width, font size,\\nweight and family of the Heading. Heading styling is automatically adjusted at\\ndifferent screen sizes. When the heading.responsiveBreakpoint is hit (\\\"small\\\"\\nby default), all heading styles will automatically be adjusted. A heading of\\nlevel 1, for example, will use the styling defined in heading level 2; a\\nheading of level 2 will use the styling defined in heading level 3 and so\\nforth. The tag in the DOM is not adjusted. A heading of level 1 remains an h1.\\nThe styling adjustment is intended to aid readability on smaller screens but\\nwill not semantically affect your application structure. If you do not want\\nthis responsive styling to occur, you can set header.responsiveBreakpoint to\\nundefined.\",\n    type: 'object',\n    defaultValue: \"\\n      1: {\\n        medium: {\\n          size: 34px,\\n          height: 40px,\\n          width: 826px,\\n        },\\n      },\\n      weight: 600,\\n      font:\\n        {\\n          family: undefined,\\n        }\"\n  },\n  'heading.weight': {\n    description: 'Default heading weight used unless a per level heading is defined.',\n    type: 'number',\n    defaultValue: 600\n  },\n  'heading.font': {\n    description: 'Default heading font used unless a per level heading is defined.',\n    type: 'object',\n    defaultValue: undefined\n  },\n  'heading.responsiveBreakpoint': {\n    description: \"The breakpoint to trigger changes in the Heading layout.\\nThe actual values will be derived from global.breakpoints.\",\n    type: 'string',\n    defaultValue: 'small'\n  }\n});"]},"metadata":{},"sourceType":"module"}