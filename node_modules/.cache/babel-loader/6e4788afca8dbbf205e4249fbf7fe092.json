{"ast":null,"code":"import React, { useState } from 'react'; // When not a descendant of a Form, FormContext still provides a basic\n// useFormInput. It doesn't do anything for components like TextInput.\n// But, it does store the value for components like CheckBox or Select\n// where the grommet component needs to know the value in order to\n// render custom visuals.\n\nvar useFormInput = function useFormInput(_, valueProp, initialValue) {\n  var _useState = useState(valueProp !== undefined ? valueProp : initialValue),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  return [valueProp !== undefined ? valueProp : value, function (nextValue) {\n    if (initialValue !== undefined) setValue(nextValue);\n  }];\n};\n\nvar useFormField = function useFormField(_ref) {\n  var error = _ref.error,\n      info = _ref.info;\n  return {\n    error: error,\n    info: info\n  };\n};\n\nexport var FormContext = /*#__PURE__*/React.createContext({\n  useFormField: useFormField,\n  useFormInput: useFormInput\n});","map":{"version":3,"sources":["C:/Users/antaresofficial/Desktop/tree/node_modules/grommet/es6/components/Form/FormContext.js"],"names":["React","useState","useFormInput","_","valueProp","initialValue","_useState","undefined","value","setValue","nextValue","useFormField","_ref","error","info","FormContext","createContext"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAAyC;AACzC;AACA;AACA;AACA;;AAEA,IAAIC,YAAY,GAAG,SAASA,YAAT,CAAsBC,CAAtB,EAAyBC,SAAzB,EAAoCC,YAApC,EAAkD;AACnE,MAAIC,SAAS,GAAGL,QAAQ,CAACG,SAAS,KAAKG,SAAd,GAA0BH,SAA1B,GAAsCC,YAAvC,CAAxB;AAAA,MACIG,KAAK,GAAGF,SAAS,CAAC,CAAD,CADrB;AAAA,MAEIG,QAAQ,GAAGH,SAAS,CAAC,CAAD,CAFxB;;AAIA,SAAO,CAACF,SAAS,KAAKG,SAAd,GAA0BH,SAA1B,GAAsCI,KAAvC,EAA8C,UAAUE,SAAV,EAAqB;AACxE,QAAIL,YAAY,KAAKE,SAArB,EAAgCE,QAAQ,CAACC,SAAD,CAAR;AACjC,GAFM,CAAP;AAGD,CARD;;AAUA,IAAIC,YAAY,GAAG,SAASA,YAAT,CAAsBC,IAAtB,EAA4B;AAC7C,MAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AAAA,MACIC,IAAI,GAAGF,IAAI,CAACE,IADhB;AAEA,SAAO;AACLD,IAAAA,KAAK,EAAEA,KADF;AAELC,IAAAA,IAAI,EAAEA;AAFD,GAAP;AAID,CAPD;;AASA,OAAO,IAAIC,WAAW,GAAG,aAAaf,KAAK,CAACgB,aAAN,CAAoB;AACxDL,EAAAA,YAAY,EAAEA,YAD0C;AAExDT,EAAAA,YAAY,EAAEA;AAF0C,CAApB,CAA/B","sourcesContent":["import React, { useState } from 'react'; // When not a descendant of a Form, FormContext still provides a basic\n// useFormInput. It doesn't do anything for components like TextInput.\n// But, it does store the value for components like CheckBox or Select\n// where the grommet component needs to know the value in order to\n// render custom visuals.\n\nvar useFormInput = function useFormInput(_, valueProp, initialValue) {\n  var _useState = useState(valueProp !== undefined ? valueProp : initialValue),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  return [valueProp !== undefined ? valueProp : value, function (nextValue) {\n    if (initialValue !== undefined) setValue(nextValue);\n  }];\n};\n\nvar useFormField = function useFormField(_ref) {\n  var error = _ref.error,\n      info = _ref.info;\n  return {\n    error: error,\n    info: info\n  };\n};\n\nexport var FormContext = /*#__PURE__*/React.createContext({\n  useFormField: useFormField,\n  useFormInput: useFormInput\n});"]},"metadata":{},"sourceType":"module"}